### This file was generated by Nexus Schema
### Do not make changes to this file directly


enum AccountType {
  FREE
  PRO
  PROPLUS
}

type Ad {
  createdAt: DateTime!
  expiresAt: DateTime!
  id: String!
  product: Product!
}

input AdCreateManyWithoutProductInput {
  connect: [AdWhereUniqueInput]
  create: [AdCreateWithoutProductInput]
}

input AdCreateWithoutProductInput {
  createdAt: DateTime
  expiresAt: DateTime!
  id: String
}

input AdListRelationFilter {
  every: AdWhereInput
  none: AdWhereInput
  some: AdWhereInput
}

input AdScalarWhereInput {
  AND: [AdScalarWhereInput]
  createdAt: DateTimeFilter
  expiresAt: DateTimeFilter
  id: StringFilter
  NOT: [AdScalarWhereInput]
  OR: [AdScalarWhereInput]
  productId: StringFilter
}

input AdUpdateManyDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  expiresAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
}

input AdUpdateManyWithoutProductInput {
  connect: [AdWhereUniqueInput]
  create: [AdCreateWithoutProductInput]
  delete: [AdWhereUniqueInput]
  deleteMany: [AdScalarWhereInput]
  disconnect: [AdWhereUniqueInput]
  set: [AdWhereUniqueInput]
  update: [AdUpdateWithWhereUniqueWithoutProductInput]
  updateMany: [AdUpdateManyWithWhereNestedInput]
  upsert: [AdUpsertWithWhereUniqueWithoutProductInput]
}

input AdUpdateManyWithWhereNestedInput {
  data: AdUpdateManyDataInput!
  where: AdScalarWhereInput!
}

input AdUpdateWithoutProductDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  expiresAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
}

input AdUpdateWithWhereUniqueWithoutProductInput {
  data: AdUpdateWithoutProductDataInput!
  where: AdWhereUniqueInput!
}

input AdUpsertWithWhereUniqueWithoutProductInput {
  create: AdCreateWithoutProductInput!
  update: AdUpdateWithoutProductDataInput!
  where: AdWhereUniqueInput!
}

input AdWhereInput {
  AND: [AdWhereInput]
  createdAt: DateTimeFilter
  expiresAt: DateTimeFilter
  id: StringFilter
  NOT: [AdWhereInput]
  OR: [AdWhereInput]
  product: ProductWhereInput
  productId: StringFilter
}

input AdWhereUniqueInput {
  id: String
}

type AuthPayload {
  token: String!
  user: User
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime]
}

input DateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime]
}

type File {
  createdAt: DateTime!
  id: String!
  isArchived: Boolean!
  name: String!
  product: Product!
  url: String!
}

input FileCreateOneWithoutProductInput {
  connect: FileWhereUniqueInput
  create: FileCreateWithoutProductInput
}

input FileCreateWithoutProductInput {
  createdAt: DateTime
  id: String
  isArchived: Boolean
  name: String!
  oneTimeCodes: OneTimeCodeCreateManyWithoutFileInput
  secret: String!
  url: String!
}

input FileUpdateOneWithoutProductInput {
  connect: FileWhereUniqueInput
  create: FileCreateWithoutProductInput
  delete: Boolean
  disconnect: Boolean
  update: FileUpdateWithoutProductDataInput
  upsert: FileUpsertWithoutProductInput
}

input FileUpdateWithoutProductDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isArchived: BoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  oneTimeCodes: OneTimeCodeUpdateManyWithoutFileInput
  secret: StringFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
}

input FileUpsertWithoutProductInput {
  create: FileCreateWithoutProductInput!
  update: FileUpdateWithoutProductDataInput!
}

input FileWhereInput {
  AND: [FileWhereInput]
  createdAt: DateTimeFilter
  id: StringFilter
  isArchived: BoolFilter
  name: StringFilter
  NOT: [FileWhereInput]
  oneTimeCodes: OneTimeCodeListRelationFilter
  OR: [FileWhereInput]
  product: ProductWhereInput
  secret: StringFilter
  url: StringFilter
}

input FileWhereUniqueInput {
  id: String
  secret: String
  url: String
}

input FloatFieldUpdateOperationsInput {
  set: Float
}

input FloatFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  not: NestedFloatFilter
  notIn: [Float]
}

input FloatNullableFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  not: NestedFloatNullableFilter
  notIn: [Float]
}

type Image {
  id: String!
  isArchived: Boolean!
  url: String!
}

input ImageCreateManyWithoutProductInput {
  connect: [ImageWhereUniqueInput]
  create: [ImageCreateWithoutProductInput]
}

input ImageCreateWithoutProductInput {
  createdAt: DateTime
  id: String
  isArchived: Boolean
  secret: String!
  url: String!
}

input ImageListRelationFilter {
  every: ImageWhereInput
  none: ImageWhereInput
  some: ImageWhereInput
}

input ImageScalarWhereInput {
  AND: [ImageScalarWhereInput]
  createdAt: DateTimeFilter
  id: StringFilter
  isArchived: BoolFilter
  NOT: [ImageScalarWhereInput]
  OR: [ImageScalarWhereInput]
  productId: StringNullableFilter
  secret: StringFilter
  url: StringFilter
}

input ImageUpdateManyDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isArchived: BoolFieldUpdateOperationsInput
  secret: StringFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
}

input ImageUpdateManyWithoutProductInput {
  connect: [ImageWhereUniqueInput]
  create: [ImageCreateWithoutProductInput]
  delete: [ImageWhereUniqueInput]
  deleteMany: [ImageScalarWhereInput]
  disconnect: [ImageWhereUniqueInput]
  set: [ImageWhereUniqueInput]
  update: [ImageUpdateWithWhereUniqueWithoutProductInput]
  updateMany: [ImageUpdateManyWithWhereNestedInput]
  upsert: [ImageUpsertWithWhereUniqueWithoutProductInput]
}

input ImageUpdateManyWithWhereNestedInput {
  data: ImageUpdateManyDataInput!
  where: ImageScalarWhereInput!
}

input ImageUpdateWithoutProductDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isArchived: BoolFieldUpdateOperationsInput
  secret: StringFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
}

input ImageUpdateWithWhereUniqueWithoutProductInput {
  data: ImageUpdateWithoutProductDataInput!
  where: ImageWhereUniqueInput!
}

input ImageUpsertWithWhereUniqueWithoutProductInput {
  create: ImageCreateWithoutProductInput!
  update: ImageUpdateWithoutProductDataInput!
  where: ImageWhereUniqueInput!
}

input ImageWhereInput {
  AND: [ImageWhereInput]
  createdAt: DateTimeFilter
  id: StringFilter
  isArchived: BoolFilter
  NOT: [ImageWhereInput]
  OR: [ImageWhereInput]
  product: ProductWhereInput
  productId: StringNullableFilter
  secret: StringFilter
  url: StringFilter
}

input ImageWhereUniqueInput {
  id: String
  secret: String
  url: String
}

input IntFieldUpdateOperationsInput {
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int]
}

input IntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int]
}

type Mutation {
  changePassword(confirmNewPassword: String!, newPassword: String!, oldPassword: String!): User!
  changePasswordWithToken(confirmPassword: String!, newPassword: String!, token: String!): Boolean!
  createOneProduct(data: ProductCreateInput!): Product!
  createOnePromoCode(data: PromoCodeCreateInput!): PromoCode!
  createOneReport(data: ReportCreateInput!): Report!
  createOneReview(data: ReviewCreateInput!): Review!
  createOneTransaction(data: TransactionCreateInput!): Transaction!
  deleteOnePromoCode(where: PromoCodeWhereUniqueInput!): PromoCode
  login(email: String!, password: String!): AuthPayload!
  redeemKey(key: String!): Transaction!
  requestWithdraw(id: String!): Boolean!
  resendVerificationEmail(email: String!): Boolean!
  resetPassword(email: String!): Boolean!
  signup(confirmPassword: String!, email: String!, password: String!, username: String!): AuthPayload!
  startAd(productId: String!): Ad

  """Returns true if the Favorite was added, false if removed"""
  toggleFavorite(productId: String!): Boolean!
  updateOneProduct(data: ProductUpdateInput!, where: ProductWhereUniqueInput!): Product
  updateOneUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  verifyEmail(token: String!): Boolean!
  verifyWithdraw(token: String!): Boolean!
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime]
}

input NestedDateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime]
}

input NestedFloatFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  not: NestedFloatFilter
  notIn: [Float]
}

input NestedFloatNullableFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  not: NestedFloatNullableFilter
  notIn: [Float]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String]
  startsWith: String
}

input NullableDateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input NullableFloatFieldUpdateOperationsInput {
  set: Float
}

input NullableIntFieldUpdateOperationsInput {
  set: Int
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

type OneTimeCode {
  expired: Boolean!
  id: String!
}

input OneTimeCodeCreateManyWithoutFileInput {
  connect: [OneTimeCodeWhereUniqueInput]
  create: [OneTimeCodeCreateWithoutFileInput]
}

input OneTimeCodeCreateWithoutFileInput {
  code: String!
  createdAt: DateTime
  expired: Boolean
  id: String
}

input OneTimeCodeListRelationFilter {
  every: OneTimeCodeWhereInput
  none: OneTimeCodeWhereInput
  some: OneTimeCodeWhereInput
}

input OneTimeCodeScalarWhereInput {
  AND: [OneTimeCodeScalarWhereInput]
  code: StringFilter
  createdAt: DateTimeFilter
  expired: BoolFilter
  fileId: StringFilter
  id: StringFilter
  NOT: [OneTimeCodeScalarWhereInput]
  OR: [OneTimeCodeScalarWhereInput]
}

input OneTimeCodeUpdateManyDataInput {
  code: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  expired: BoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
}

input OneTimeCodeUpdateManyWithoutFileInput {
  connect: [OneTimeCodeWhereUniqueInput]
  create: [OneTimeCodeCreateWithoutFileInput]
  delete: [OneTimeCodeWhereUniqueInput]
  deleteMany: [OneTimeCodeScalarWhereInput]
  disconnect: [OneTimeCodeWhereUniqueInput]
  set: [OneTimeCodeWhereUniqueInput]
  update: [OneTimeCodeUpdateWithWhereUniqueWithoutFileInput]
  updateMany: [OneTimeCodeUpdateManyWithWhereNestedInput]
  upsert: [OneTimeCodeUpsertWithWhereUniqueWithoutFileInput]
}

input OneTimeCodeUpdateManyWithWhereNestedInput {
  data: OneTimeCodeUpdateManyDataInput!
  where: OneTimeCodeScalarWhereInput!
}

input OneTimeCodeUpdateWithoutFileDataInput {
  code: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  expired: BoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
}

input OneTimeCodeUpdateWithWhereUniqueWithoutFileInput {
  data: OneTimeCodeUpdateWithoutFileDataInput!
  where: OneTimeCodeWhereUniqueInput!
}

input OneTimeCodeUpsertWithWhereUniqueWithoutFileInput {
  create: OneTimeCodeCreateWithoutFileInput!
  update: OneTimeCodeUpdateWithoutFileDataInput!
  where: OneTimeCodeWhereUniqueInput!
}

input OneTimeCodeWhereInput {
  AND: [OneTimeCodeWhereInput]
  code: StringFilter
  createdAt: DateTimeFilter
  expired: BoolFilter
  file: FileWhereInput
  fileId: StringFilter
  id: StringFilter
  NOT: [OneTimeCodeWhereInput]
  OR: [OneTimeCodeWhereInput]
}

input OneTimeCodeWhereUniqueInput {
  id: String
}

type Payout {
  amount: Float!
  createdAt: DateTime!
  id: String!
  product: Product!
}

input PayoutCreateManyWithoutProductInput {
  connect: [PayoutWhereUniqueInput]
  create: [PayoutCreateWithoutProductInput]
}

input PayoutCreateManyWithoutTransactionInput {
  connect: [PayoutWhereUniqueInput]
  create: [PayoutCreateWithoutTransactionInput]
}

input PayoutCreateManyWithoutUserInput {
  connect: [PayoutWhereUniqueInput]
  create: [PayoutCreateWithoutUserInput]
}

input PayoutCreateWithoutProductInput {
  amount: Float
  createdAt: DateTime
  forPlatform: Boolean
  id: String
  transaction: TransactionCreateOneWithoutPayoutsInput!
  user: UserCreateOneWithoutPayoutsInput
}

input PayoutCreateWithoutTransactionInput {
  amount: Float
  createdAt: DateTime
  forPlatform: Boolean
  id: String
  product: ProductCreateOneWithoutPayoutsInput!
  user: UserCreateOneWithoutPayoutsInput
}

input PayoutCreateWithoutUserInput {
  amount: Float
  createdAt: DateTime
  forPlatform: Boolean
  id: String
  product: ProductCreateOneWithoutPayoutsInput!
  transaction: TransactionCreateOneWithoutPayoutsInput!
}

input PayoutListRelationFilter {
  every: PayoutWhereInput
  none: PayoutWhereInput
  some: PayoutWhereInput
}

input PayoutScalarWhereInput {
  amount: FloatFilter
  AND: [PayoutScalarWhereInput]
  createdAt: DateTimeFilter
  forPlatform: BoolFilter
  id: StringFilter
  NOT: [PayoutScalarWhereInput]
  OR: [PayoutScalarWhereInput]
  productId: StringFilter
  transactionId: StringFilter
  userId: StringNullableFilter
}

input PayoutUpdateManyDataInput {
  amount: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  forPlatform: BoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
}

input PayoutUpdateManyWithoutProductInput {
  connect: [PayoutWhereUniqueInput]
  create: [PayoutCreateWithoutProductInput]
  delete: [PayoutWhereUniqueInput]
  deleteMany: [PayoutScalarWhereInput]
  disconnect: [PayoutWhereUniqueInput]
  set: [PayoutWhereUniqueInput]
  update: [PayoutUpdateWithWhereUniqueWithoutProductInput]
  updateMany: [PayoutUpdateManyWithWhereNestedInput]
  upsert: [PayoutUpsertWithWhereUniqueWithoutProductInput]
}

input PayoutUpdateManyWithoutTransactionInput {
  connect: [PayoutWhereUniqueInput]
  create: [PayoutCreateWithoutTransactionInput]
  delete: [PayoutWhereUniqueInput]
  deleteMany: [PayoutScalarWhereInput]
  disconnect: [PayoutWhereUniqueInput]
  set: [PayoutWhereUniqueInput]
  update: [PayoutUpdateWithWhereUniqueWithoutTransactionInput]
  updateMany: [PayoutUpdateManyWithWhereNestedInput]
  upsert: [PayoutUpsertWithWhereUniqueWithoutTransactionInput]
}

input PayoutUpdateManyWithoutUserInput {
  connect: [PayoutWhereUniqueInput]
  create: [PayoutCreateWithoutUserInput]
  delete: [PayoutWhereUniqueInput]
  deleteMany: [PayoutScalarWhereInput]
  disconnect: [PayoutWhereUniqueInput]
  set: [PayoutWhereUniqueInput]
  update: [PayoutUpdateWithWhereUniqueWithoutUserInput]
  updateMany: [PayoutUpdateManyWithWhereNestedInput]
  upsert: [PayoutUpsertWithWhereUniqueWithoutUserInput]
}

input PayoutUpdateManyWithWhereNestedInput {
  data: PayoutUpdateManyDataInput!
  where: PayoutScalarWhereInput!
}

input PayoutUpdateWithoutProductDataInput {
  amount: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  forPlatform: BoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  transaction: TransactionUpdateOneRequiredWithoutPayoutsInput
  user: UserUpdateOneWithoutPayoutsInput
}

input PayoutUpdateWithoutTransactionDataInput {
  amount: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  forPlatform: BoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  product: ProductUpdateOneRequiredWithoutPayoutsInput
  user: UserUpdateOneWithoutPayoutsInput
}

input PayoutUpdateWithoutUserDataInput {
  amount: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  forPlatform: BoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  product: ProductUpdateOneRequiredWithoutPayoutsInput
  transaction: TransactionUpdateOneRequiredWithoutPayoutsInput
}

input PayoutUpdateWithWhereUniqueWithoutProductInput {
  data: PayoutUpdateWithoutProductDataInput!
  where: PayoutWhereUniqueInput!
}

input PayoutUpdateWithWhereUniqueWithoutTransactionInput {
  data: PayoutUpdateWithoutTransactionDataInput!
  where: PayoutWhereUniqueInput!
}

input PayoutUpdateWithWhereUniqueWithoutUserInput {
  data: PayoutUpdateWithoutUserDataInput!
  where: PayoutWhereUniqueInput!
}

input PayoutUpsertWithWhereUniqueWithoutProductInput {
  create: PayoutCreateWithoutProductInput!
  update: PayoutUpdateWithoutProductDataInput!
  where: PayoutWhereUniqueInput!
}

input PayoutUpsertWithWhereUniqueWithoutTransactionInput {
  create: PayoutCreateWithoutTransactionInput!
  update: PayoutUpdateWithoutTransactionDataInput!
  where: PayoutWhereUniqueInput!
}

input PayoutUpsertWithWhereUniqueWithoutUserInput {
  create: PayoutCreateWithoutUserInput!
  update: PayoutUpdateWithoutUserDataInput!
  where: PayoutWhereUniqueInput!
}

input PayoutWhereInput {
  amount: FloatFilter
  AND: [PayoutWhereInput]
  createdAt: DateTimeFilter
  forPlatform: BoolFilter
  id: StringFilter
  NOT: [PayoutWhereInput]
  OR: [PayoutWhereInput]
  product: ProductWhereInput
  productId: StringFilter
  transaction: TransactionWhereInput
  transactionId: StringFilter
  user: UserWhereInput
  userId: StringNullableFilter
}

input PayoutWhereUniqueInput {
  id: String
}

type Product {
  amount: Float!
  createdAt: DateTime!
  description: String!
  filename: String!
  hasReviewed: Boolean!
  id: String!
  images: [String!]!
  isFavorite: Boolean!
  name: String!
  onSale: Boolean!
  owner: User

  """Returns true if a user has bought the specified product"""
  ownsProduct: Boolean!
  reviews(after: ReviewWhereUniqueInput, before: ReviewWhereUniqueInput, first: Int, last: Int): [Review!]!
  salePrice: Float
  stars: Float!
  tags(after: TagWhereUniqueInput, before: TagWhereUniqueInput, first: Int, last: Int): [Tag!]!
  transactions(after: TransactionWhereUniqueInput, before: TransactionWhereUniqueInput, first: Int, last: Int): [Transaction!]!
  updatedAt: DateTime!
}

input ProductCreateInput {
  ads: AdCreateManyWithoutProductInput
  amount: Float
  createdAt: DateTime
  description: String!
  file: FileCreateOneWithoutProductInput
  id: String
  images: ImageCreateManyWithoutProductInput
  isArchived: Boolean
  name: String!
  onSale: Boolean
  payouts: PayoutCreateManyWithoutProductInput
  promoCodes: PromoCodeCreateManyWithoutProductInput
  reports: ReportCreateManyWithoutProductInput
  reviews: ReviewCreateManyWithoutProductInput
  salePrice: Float
  tags: TagCreateManyWithoutProductsInput
  transactions: TransactionCreateManyWithoutProductsInput
  updatedAt: DateTime
  users: UserCreateManyWithoutFavoritesInput
}

input ProductCreateManyWithoutOwnerInput {
  connect: [ProductWhereUniqueInput]
  create: [ProductCreateWithoutOwnerInput]
}

input ProductCreateManyWithoutTagsInput {
  connect: [ProductWhereUniqueInput]
  create: [ProductCreateWithoutTagsInput]
}

input ProductCreateManyWithoutTransactionsInput {
  connect: [ProductWhereUniqueInput]
  create: [ProductCreateWithoutTransactionsInput]
}

input ProductCreateManyWithoutUsersInput {
  connect: [ProductWhereUniqueInput]
  create: [ProductCreateWithoutUsersInput]
}

input ProductCreateOneWithoutPayoutsInput {
  connect: ProductWhereUniqueInput
  create: ProductCreateWithoutPayoutsInput
}

input ProductCreateOneWithoutPromoCodesInput {
  connect: ProductWhereUniqueInput
  create: ProductCreateWithoutPromoCodesInput
}

input ProductCreateOneWithoutReportsInput {
  connect: ProductWhereUniqueInput
  create: ProductCreateWithoutReportsInput
}

input ProductCreateOneWithoutReviewsInput {
  connect: ProductWhereUniqueInput
  create: ProductCreateWithoutReviewsInput
}

input ProductCreateWithoutOwnerInput {
  ads: AdCreateManyWithoutProductInput
  amount: Float
  createdAt: DateTime
  description: String!
  file: FileCreateOneWithoutProductInput
  id: String
  images: ImageCreateManyWithoutProductInput
  isArchived: Boolean
  name: String!
  onSale: Boolean
  payouts: PayoutCreateManyWithoutProductInput
  promoCodes: PromoCodeCreateManyWithoutProductInput
  reports: ReportCreateManyWithoutProductInput
  reviews: ReviewCreateManyWithoutProductInput
  salePrice: Float
  tags: TagCreateManyWithoutProductsInput
  transactions: TransactionCreateManyWithoutProductsInput
  updatedAt: DateTime
  users: UserCreateManyWithoutFavoritesInput
}

input ProductCreateWithoutPayoutsInput {
  ads: AdCreateManyWithoutProductInput
  amount: Float
  createdAt: DateTime
  description: String!
  file: FileCreateOneWithoutProductInput
  id: String
  images: ImageCreateManyWithoutProductInput
  isArchived: Boolean
  name: String!
  onSale: Boolean
  owner: UserCreateOneWithoutProductsInput
  promoCodes: PromoCodeCreateManyWithoutProductInput
  reports: ReportCreateManyWithoutProductInput
  reviews: ReviewCreateManyWithoutProductInput
  salePrice: Float
  tags: TagCreateManyWithoutProductsInput
  transactions: TransactionCreateManyWithoutProductsInput
  updatedAt: DateTime
  users: UserCreateManyWithoutFavoritesInput
}

input ProductCreateWithoutPromoCodesInput {
  ads: AdCreateManyWithoutProductInput
  amount: Float
  createdAt: DateTime
  description: String!
  file: FileCreateOneWithoutProductInput
  id: String
  images: ImageCreateManyWithoutProductInput
  isArchived: Boolean
  name: String!
  onSale: Boolean
  owner: UserCreateOneWithoutProductsInput
  payouts: PayoutCreateManyWithoutProductInput
  reports: ReportCreateManyWithoutProductInput
  reviews: ReviewCreateManyWithoutProductInput
  salePrice: Float
  tags: TagCreateManyWithoutProductsInput
  transactions: TransactionCreateManyWithoutProductsInput
  updatedAt: DateTime
  users: UserCreateManyWithoutFavoritesInput
}

input ProductCreateWithoutReportsInput {
  ads: AdCreateManyWithoutProductInput
  amount: Float
  createdAt: DateTime
  description: String!
  file: FileCreateOneWithoutProductInput
  id: String
  images: ImageCreateManyWithoutProductInput
  isArchived: Boolean
  name: String!
  onSale: Boolean
  owner: UserCreateOneWithoutProductsInput
  payouts: PayoutCreateManyWithoutProductInput
  promoCodes: PromoCodeCreateManyWithoutProductInput
  reviews: ReviewCreateManyWithoutProductInput
  salePrice: Float
  tags: TagCreateManyWithoutProductsInput
  transactions: TransactionCreateManyWithoutProductsInput
  updatedAt: DateTime
  users: UserCreateManyWithoutFavoritesInput
}

input ProductCreateWithoutReviewsInput {
  ads: AdCreateManyWithoutProductInput
  amount: Float
  createdAt: DateTime
  description: String!
  file: FileCreateOneWithoutProductInput
  id: String
  images: ImageCreateManyWithoutProductInput
  isArchived: Boolean
  name: String!
  onSale: Boolean
  owner: UserCreateOneWithoutProductsInput
  payouts: PayoutCreateManyWithoutProductInput
  promoCodes: PromoCodeCreateManyWithoutProductInput
  reports: ReportCreateManyWithoutProductInput
  salePrice: Float
  tags: TagCreateManyWithoutProductsInput
  transactions: TransactionCreateManyWithoutProductsInput
  updatedAt: DateTime
  users: UserCreateManyWithoutFavoritesInput
}

input ProductCreateWithoutTagsInput {
  ads: AdCreateManyWithoutProductInput
  amount: Float
  createdAt: DateTime
  description: String!
  file: FileCreateOneWithoutProductInput
  id: String
  images: ImageCreateManyWithoutProductInput
  isArchived: Boolean
  name: String!
  onSale: Boolean
  owner: UserCreateOneWithoutProductsInput
  payouts: PayoutCreateManyWithoutProductInput
  promoCodes: PromoCodeCreateManyWithoutProductInput
  reports: ReportCreateManyWithoutProductInput
  reviews: ReviewCreateManyWithoutProductInput
  salePrice: Float
  transactions: TransactionCreateManyWithoutProductsInput
  updatedAt: DateTime
  users: UserCreateManyWithoutFavoritesInput
}

input ProductCreateWithoutTransactionsInput {
  ads: AdCreateManyWithoutProductInput
  amount: Float
  createdAt: DateTime
  description: String!
  file: FileCreateOneWithoutProductInput
  id: String
  images: ImageCreateManyWithoutProductInput
  isArchived: Boolean
  name: String!
  onSale: Boolean
  owner: UserCreateOneWithoutProductsInput
  payouts: PayoutCreateManyWithoutProductInput
  promoCodes: PromoCodeCreateManyWithoutProductInput
  reports: ReportCreateManyWithoutProductInput
  reviews: ReviewCreateManyWithoutProductInput
  salePrice: Float
  tags: TagCreateManyWithoutProductsInput
  updatedAt: DateTime
  users: UserCreateManyWithoutFavoritesInput
}

input ProductCreateWithoutUsersInput {
  ads: AdCreateManyWithoutProductInput
  amount: Float
  createdAt: DateTime
  description: String!
  file: FileCreateOneWithoutProductInput
  id: String
  images: ImageCreateManyWithoutProductInput
  isArchived: Boolean
  name: String!
  onSale: Boolean
  owner: UserCreateOneWithoutProductsInput
  payouts: PayoutCreateManyWithoutProductInput
  promoCodes: PromoCodeCreateManyWithoutProductInput
  reports: ReportCreateManyWithoutProductInput
  reviews: ReviewCreateManyWithoutProductInput
  salePrice: Float
  tags: TagCreateManyWithoutProductsInput
  transactions: TransactionCreateManyWithoutProductsInput
  updatedAt: DateTime
}

input ProductListRelationFilter {
  every: ProductWhereInput
  none: ProductWhereInput
  some: ProductWhereInput
}

input ProductScalarWhereInput {
  amount: FloatFilter
  AND: [ProductScalarWhereInput]
  createdAt: DateTimeFilter
  description: StringFilter
  fileId: StringNullableFilter
  id: StringFilter
  isArchived: BoolFilter
  name: StringFilter
  NOT: [ProductScalarWhereInput]
  onSale: BoolFilter
  OR: [ProductScalarWhereInput]
  ownerId: StringNullableFilter
  salePrice: FloatNullableFilter
  updatedAt: DateTimeFilter
}

input ProductUpdateInput {
  ads: AdUpdateManyWithoutProductInput
  amount: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  file: FileUpdateOneWithoutProductInput
  id: StringFieldUpdateOperationsInput
  images: ImageUpdateManyWithoutProductInput
  isArchived: BoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  onSale: BoolFieldUpdateOperationsInput
  owner: UserUpdateOneWithoutProductsInput
  payouts: PayoutUpdateManyWithoutProductInput
  promoCodes: PromoCodeUpdateManyWithoutProductInput
  reports: ReportUpdateManyWithoutProductInput
  reviews: ReviewUpdateManyWithoutProductInput
  salePrice: NullableFloatFieldUpdateOperationsInput
  tags: TagUpdateManyWithoutProductsInput
  transactions: TransactionUpdateManyWithoutProductsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  users: UserUpdateManyWithoutFavoritesInput
}

input ProductUpdateManyDataInput {
  amount: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isArchived: BoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  onSale: BoolFieldUpdateOperationsInput
  salePrice: NullableFloatFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ProductUpdateManyWithoutOwnerInput {
  connect: [ProductWhereUniqueInput]
  create: [ProductCreateWithoutOwnerInput]
  delete: [ProductWhereUniqueInput]
  deleteMany: [ProductScalarWhereInput]
  disconnect: [ProductWhereUniqueInput]
  set: [ProductWhereUniqueInput]
  update: [ProductUpdateWithWhereUniqueWithoutOwnerInput]
  updateMany: [ProductUpdateManyWithWhereNestedInput]
  upsert: [ProductUpsertWithWhereUniqueWithoutOwnerInput]
}

input ProductUpdateManyWithoutTagsInput {
  connect: [ProductWhereUniqueInput]
  create: [ProductCreateWithoutTagsInput]
  delete: [ProductWhereUniqueInput]
  deleteMany: [ProductScalarWhereInput]
  disconnect: [ProductWhereUniqueInput]
  set: [ProductWhereUniqueInput]
  update: [ProductUpdateWithWhereUniqueWithoutTagsInput]
  updateMany: [ProductUpdateManyWithWhereNestedInput]
  upsert: [ProductUpsertWithWhereUniqueWithoutTagsInput]
}

input ProductUpdateManyWithoutTransactionsInput {
  connect: [ProductWhereUniqueInput]
  create: [ProductCreateWithoutTransactionsInput]
  delete: [ProductWhereUniqueInput]
  deleteMany: [ProductScalarWhereInput]
  disconnect: [ProductWhereUniqueInput]
  set: [ProductWhereUniqueInput]
  update: [ProductUpdateWithWhereUniqueWithoutTransactionsInput]
  updateMany: [ProductUpdateManyWithWhereNestedInput]
  upsert: [ProductUpsertWithWhereUniqueWithoutTransactionsInput]
}

input ProductUpdateManyWithoutUsersInput {
  connect: [ProductWhereUniqueInput]
  create: [ProductCreateWithoutUsersInput]
  delete: [ProductWhereUniqueInput]
  deleteMany: [ProductScalarWhereInput]
  disconnect: [ProductWhereUniqueInput]
  set: [ProductWhereUniqueInput]
  update: [ProductUpdateWithWhereUniqueWithoutUsersInput]
  updateMany: [ProductUpdateManyWithWhereNestedInput]
  upsert: [ProductUpsertWithWhereUniqueWithoutUsersInput]
}

input ProductUpdateManyWithWhereNestedInput {
  data: ProductUpdateManyDataInput!
  where: ProductScalarWhereInput!
}

input ProductUpdateOneRequiredWithoutPayoutsInput {
  connect: ProductWhereUniqueInput
  create: ProductCreateWithoutPayoutsInput
  update: ProductUpdateWithoutPayoutsDataInput
  upsert: ProductUpsertWithoutPayoutsInput
}

input ProductUpdateOneRequiredWithoutReportsInput {
  connect: ProductWhereUniqueInput
  create: ProductCreateWithoutReportsInput
  update: ProductUpdateWithoutReportsDataInput
  upsert: ProductUpsertWithoutReportsInput
}

input ProductUpdateOneRequiredWithoutReviewsInput {
  connect: ProductWhereUniqueInput
  create: ProductCreateWithoutReviewsInput
  update: ProductUpdateWithoutReviewsDataInput
  upsert: ProductUpsertWithoutReviewsInput
}

input ProductUpdateOneWithoutPromoCodesInput {
  connect: ProductWhereUniqueInput
  create: ProductCreateWithoutPromoCodesInput
  delete: Boolean
  disconnect: Boolean
  update: ProductUpdateWithoutPromoCodesDataInput
  upsert: ProductUpsertWithoutPromoCodesInput
}

input ProductUpdateWithoutOwnerDataInput {
  ads: AdUpdateManyWithoutProductInput
  amount: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  file: FileUpdateOneWithoutProductInput
  id: StringFieldUpdateOperationsInput
  images: ImageUpdateManyWithoutProductInput
  isArchived: BoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  onSale: BoolFieldUpdateOperationsInput
  payouts: PayoutUpdateManyWithoutProductInput
  promoCodes: PromoCodeUpdateManyWithoutProductInput
  reports: ReportUpdateManyWithoutProductInput
  reviews: ReviewUpdateManyWithoutProductInput
  salePrice: NullableFloatFieldUpdateOperationsInput
  tags: TagUpdateManyWithoutProductsInput
  transactions: TransactionUpdateManyWithoutProductsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  users: UserUpdateManyWithoutFavoritesInput
}

input ProductUpdateWithoutPayoutsDataInput {
  ads: AdUpdateManyWithoutProductInput
  amount: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  file: FileUpdateOneWithoutProductInput
  id: StringFieldUpdateOperationsInput
  images: ImageUpdateManyWithoutProductInput
  isArchived: BoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  onSale: BoolFieldUpdateOperationsInput
  owner: UserUpdateOneWithoutProductsInput
  promoCodes: PromoCodeUpdateManyWithoutProductInput
  reports: ReportUpdateManyWithoutProductInput
  reviews: ReviewUpdateManyWithoutProductInput
  salePrice: NullableFloatFieldUpdateOperationsInput
  tags: TagUpdateManyWithoutProductsInput
  transactions: TransactionUpdateManyWithoutProductsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  users: UserUpdateManyWithoutFavoritesInput
}

input ProductUpdateWithoutPromoCodesDataInput {
  ads: AdUpdateManyWithoutProductInput
  amount: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  file: FileUpdateOneWithoutProductInput
  id: StringFieldUpdateOperationsInput
  images: ImageUpdateManyWithoutProductInput
  isArchived: BoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  onSale: BoolFieldUpdateOperationsInput
  owner: UserUpdateOneWithoutProductsInput
  payouts: PayoutUpdateManyWithoutProductInput
  reports: ReportUpdateManyWithoutProductInput
  reviews: ReviewUpdateManyWithoutProductInput
  salePrice: NullableFloatFieldUpdateOperationsInput
  tags: TagUpdateManyWithoutProductsInput
  transactions: TransactionUpdateManyWithoutProductsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  users: UserUpdateManyWithoutFavoritesInput
}

input ProductUpdateWithoutReportsDataInput {
  ads: AdUpdateManyWithoutProductInput
  amount: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  file: FileUpdateOneWithoutProductInput
  id: StringFieldUpdateOperationsInput
  images: ImageUpdateManyWithoutProductInput
  isArchived: BoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  onSale: BoolFieldUpdateOperationsInput
  owner: UserUpdateOneWithoutProductsInput
  payouts: PayoutUpdateManyWithoutProductInput
  promoCodes: PromoCodeUpdateManyWithoutProductInput
  reviews: ReviewUpdateManyWithoutProductInput
  salePrice: NullableFloatFieldUpdateOperationsInput
  tags: TagUpdateManyWithoutProductsInput
  transactions: TransactionUpdateManyWithoutProductsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  users: UserUpdateManyWithoutFavoritesInput
}

input ProductUpdateWithoutReviewsDataInput {
  ads: AdUpdateManyWithoutProductInput
  amount: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  file: FileUpdateOneWithoutProductInput
  id: StringFieldUpdateOperationsInput
  images: ImageUpdateManyWithoutProductInput
  isArchived: BoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  onSale: BoolFieldUpdateOperationsInput
  owner: UserUpdateOneWithoutProductsInput
  payouts: PayoutUpdateManyWithoutProductInput
  promoCodes: PromoCodeUpdateManyWithoutProductInput
  reports: ReportUpdateManyWithoutProductInput
  salePrice: NullableFloatFieldUpdateOperationsInput
  tags: TagUpdateManyWithoutProductsInput
  transactions: TransactionUpdateManyWithoutProductsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  users: UserUpdateManyWithoutFavoritesInput
}

input ProductUpdateWithoutTagsDataInput {
  ads: AdUpdateManyWithoutProductInput
  amount: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  file: FileUpdateOneWithoutProductInput
  id: StringFieldUpdateOperationsInput
  images: ImageUpdateManyWithoutProductInput
  isArchived: BoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  onSale: BoolFieldUpdateOperationsInput
  owner: UserUpdateOneWithoutProductsInput
  payouts: PayoutUpdateManyWithoutProductInput
  promoCodes: PromoCodeUpdateManyWithoutProductInput
  reports: ReportUpdateManyWithoutProductInput
  reviews: ReviewUpdateManyWithoutProductInput
  salePrice: NullableFloatFieldUpdateOperationsInput
  transactions: TransactionUpdateManyWithoutProductsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  users: UserUpdateManyWithoutFavoritesInput
}

input ProductUpdateWithoutTransactionsDataInput {
  ads: AdUpdateManyWithoutProductInput
  amount: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  file: FileUpdateOneWithoutProductInput
  id: StringFieldUpdateOperationsInput
  images: ImageUpdateManyWithoutProductInput
  isArchived: BoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  onSale: BoolFieldUpdateOperationsInput
  owner: UserUpdateOneWithoutProductsInput
  payouts: PayoutUpdateManyWithoutProductInput
  promoCodes: PromoCodeUpdateManyWithoutProductInput
  reports: ReportUpdateManyWithoutProductInput
  reviews: ReviewUpdateManyWithoutProductInput
  salePrice: NullableFloatFieldUpdateOperationsInput
  tags: TagUpdateManyWithoutProductsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  users: UserUpdateManyWithoutFavoritesInput
}

input ProductUpdateWithoutUsersDataInput {
  ads: AdUpdateManyWithoutProductInput
  amount: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  file: FileUpdateOneWithoutProductInput
  id: StringFieldUpdateOperationsInput
  images: ImageUpdateManyWithoutProductInput
  isArchived: BoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  onSale: BoolFieldUpdateOperationsInput
  owner: UserUpdateOneWithoutProductsInput
  payouts: PayoutUpdateManyWithoutProductInput
  promoCodes: PromoCodeUpdateManyWithoutProductInput
  reports: ReportUpdateManyWithoutProductInput
  reviews: ReviewUpdateManyWithoutProductInput
  salePrice: NullableFloatFieldUpdateOperationsInput
  tags: TagUpdateManyWithoutProductsInput
  transactions: TransactionUpdateManyWithoutProductsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ProductUpdateWithWhereUniqueWithoutOwnerInput {
  data: ProductUpdateWithoutOwnerDataInput!
  where: ProductWhereUniqueInput!
}

input ProductUpdateWithWhereUniqueWithoutTagsInput {
  data: ProductUpdateWithoutTagsDataInput!
  where: ProductWhereUniqueInput!
}

input ProductUpdateWithWhereUniqueWithoutTransactionsInput {
  data: ProductUpdateWithoutTransactionsDataInput!
  where: ProductWhereUniqueInput!
}

input ProductUpdateWithWhereUniqueWithoutUsersInput {
  data: ProductUpdateWithoutUsersDataInput!
  where: ProductWhereUniqueInput!
}

input ProductUpsertWithoutPayoutsInput {
  create: ProductCreateWithoutPayoutsInput!
  update: ProductUpdateWithoutPayoutsDataInput!
}

input ProductUpsertWithoutPromoCodesInput {
  create: ProductCreateWithoutPromoCodesInput!
  update: ProductUpdateWithoutPromoCodesDataInput!
}

input ProductUpsertWithoutReportsInput {
  create: ProductCreateWithoutReportsInput!
  update: ProductUpdateWithoutReportsDataInput!
}

input ProductUpsertWithoutReviewsInput {
  create: ProductCreateWithoutReviewsInput!
  update: ProductUpdateWithoutReviewsDataInput!
}

input ProductUpsertWithWhereUniqueWithoutOwnerInput {
  create: ProductCreateWithoutOwnerInput!
  update: ProductUpdateWithoutOwnerDataInput!
  where: ProductWhereUniqueInput!
}

input ProductUpsertWithWhereUniqueWithoutTagsInput {
  create: ProductCreateWithoutTagsInput!
  update: ProductUpdateWithoutTagsDataInput!
  where: ProductWhereUniqueInput!
}

input ProductUpsertWithWhereUniqueWithoutTransactionsInput {
  create: ProductCreateWithoutTransactionsInput!
  update: ProductUpdateWithoutTransactionsDataInput!
  where: ProductWhereUniqueInput!
}

input ProductUpsertWithWhereUniqueWithoutUsersInput {
  create: ProductCreateWithoutUsersInput!
  update: ProductUpdateWithoutUsersDataInput!
  where: ProductWhereUniqueInput!
}

input ProductWhereInput {
  ads: AdListRelationFilter
  amount: FloatFilter
  AND: [ProductWhereInput]
  createdAt: DateTimeFilter
  description: StringFilter
  file: FileWhereInput
  fileId: StringNullableFilter
  id: StringFilter
  images: ImageListRelationFilter
  isArchived: BoolFilter
  name: StringFilter
  NOT: [ProductWhereInput]
  onSale: BoolFilter
  OR: [ProductWhereInput]
  owner: UserWhereInput
  ownerId: StringNullableFilter
  payouts: PayoutListRelationFilter
  promoCodes: PromoCodeListRelationFilter
  reports: ReportListRelationFilter
  reviews: ReviewListRelationFilter
  salePrice: FloatNullableFilter
  tags: TagListRelationFilter
  transactions: TransactionListRelationFilter
  updatedAt: DateTimeFilter
  users: UserListRelationFilter
}

input ProductWhereUniqueInput {
  id: String
}

type PromoCode {
  affectsAll: Boolean!
  code: String!
  createdAt: DateTime!
  expiresAt: DateTime
  id: String!
  isArchived: Boolean!
  percentOff: Int!
  product: Product
  useLimit: Int
  user: User!
  uses: Int!
}

input PromoCodeCreateInput {
  affectsAll: Boolean!
  code: String!
  createdAt: DateTime
  expiresAt: DateTime
  id: String
  isArchived: Boolean
  percentOff: Int!
  product: ProductCreateOneWithoutPromoCodesInput
  useLimit: Int
  uses: Int
}

input PromoCodeCreateManyWithoutProductInput {
  connect: [PromoCodeWhereUniqueInput]
  create: [PromoCodeCreateWithoutProductInput]
}

input PromoCodeCreateManyWithoutTransactionsInput {
  connect: [PromoCodeWhereUniqueInput]
  create: [PromoCodeCreateWithoutTransactionsInput]
}

input PromoCodeCreateManyWithoutUserInput {
  connect: [PromoCodeWhereUniqueInput]
  create: [PromoCodeCreateWithoutUserInput]
}

input PromoCodeCreateWithoutProductInput {
  affectsAll: Boolean!
  code: String!
  createdAt: DateTime
  expiresAt: DateTime
  id: String
  isArchived: Boolean
  percentOff: Int!
  transactions: TransactionCreateManyWithoutPromosInput
  useLimit: Int
  user: UserCreateOneWithoutPromoCodesInput!
  uses: Int
}

input PromoCodeCreateWithoutTransactionsInput {
  affectsAll: Boolean!
  code: String!
  createdAt: DateTime
  expiresAt: DateTime
  id: String
  isArchived: Boolean
  percentOff: Int!
  product: ProductCreateOneWithoutPromoCodesInput
  useLimit: Int
  user: UserCreateOneWithoutPromoCodesInput!
  uses: Int
}

input PromoCodeCreateWithoutUserInput {
  affectsAll: Boolean!
  code: String!
  createdAt: DateTime
  expiresAt: DateTime
  id: String
  isArchived: Boolean
  percentOff: Int!
  product: ProductCreateOneWithoutPromoCodesInput
  transactions: TransactionCreateManyWithoutPromosInput
  useLimit: Int
  uses: Int
}

input PromoCodeListRelationFilter {
  every: PromoCodeWhereInput
  none: PromoCodeWhereInput
  some: PromoCodeWhereInput
}

input PromoCodeScalarWhereInput {
  affectsAll: BoolFilter
  AND: [PromoCodeScalarWhereInput]
  code: StringFilter
  createdAt: DateTimeFilter
  expiresAt: DateTimeNullableFilter
  id: StringFilter
  isArchived: BoolFilter
  NOT: [PromoCodeScalarWhereInput]
  OR: [PromoCodeScalarWhereInput]
  percentOff: IntFilter
  productId: StringNullableFilter
  useLimit: IntNullableFilter
  userId: StringFilter
  uses: IntFilter
}

input PromoCodeUpdateManyDataInput {
  affectsAll: BoolFieldUpdateOperationsInput
  code: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  expiresAt: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isArchived: BoolFieldUpdateOperationsInput
  percentOff: IntFieldUpdateOperationsInput
  useLimit: NullableIntFieldUpdateOperationsInput
  uses: IntFieldUpdateOperationsInput
}

input PromoCodeUpdateManyWithoutProductInput {
  connect: [PromoCodeWhereUniqueInput]
  create: [PromoCodeCreateWithoutProductInput]
  delete: [PromoCodeWhereUniqueInput]
  deleteMany: [PromoCodeScalarWhereInput]
  disconnect: [PromoCodeWhereUniqueInput]
  set: [PromoCodeWhereUniqueInput]
  update: [PromoCodeUpdateWithWhereUniqueWithoutProductInput]
  updateMany: [PromoCodeUpdateManyWithWhereNestedInput]
  upsert: [PromoCodeUpsertWithWhereUniqueWithoutProductInput]
}

input PromoCodeUpdateManyWithoutTransactionsInput {
  connect: [PromoCodeWhereUniqueInput]
  create: [PromoCodeCreateWithoutTransactionsInput]
  delete: [PromoCodeWhereUniqueInput]
  deleteMany: [PromoCodeScalarWhereInput]
  disconnect: [PromoCodeWhereUniqueInput]
  set: [PromoCodeWhereUniqueInput]
  update: [PromoCodeUpdateWithWhereUniqueWithoutTransactionsInput]
  updateMany: [PromoCodeUpdateManyWithWhereNestedInput]
  upsert: [PromoCodeUpsertWithWhereUniqueWithoutTransactionsInput]
}

input PromoCodeUpdateManyWithoutUserInput {
  connect: [PromoCodeWhereUniqueInput]
  create: [PromoCodeCreateWithoutUserInput]
  delete: [PromoCodeWhereUniqueInput]
  deleteMany: [PromoCodeScalarWhereInput]
  disconnect: [PromoCodeWhereUniqueInput]
  set: [PromoCodeWhereUniqueInput]
  update: [PromoCodeUpdateWithWhereUniqueWithoutUserInput]
  updateMany: [PromoCodeUpdateManyWithWhereNestedInput]
  upsert: [PromoCodeUpsertWithWhereUniqueWithoutUserInput]
}

input PromoCodeUpdateManyWithWhereNestedInput {
  data: PromoCodeUpdateManyDataInput!
  where: PromoCodeScalarWhereInput!
}

input PromoCodeUpdateWithoutProductDataInput {
  affectsAll: BoolFieldUpdateOperationsInput
  code: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  expiresAt: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isArchived: BoolFieldUpdateOperationsInput
  percentOff: IntFieldUpdateOperationsInput
  transactions: TransactionUpdateManyWithoutPromosInput
  useLimit: NullableIntFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutPromoCodesInput
  uses: IntFieldUpdateOperationsInput
}

input PromoCodeUpdateWithoutTransactionsDataInput {
  affectsAll: BoolFieldUpdateOperationsInput
  code: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  expiresAt: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isArchived: BoolFieldUpdateOperationsInput
  percentOff: IntFieldUpdateOperationsInput
  product: ProductUpdateOneWithoutPromoCodesInput
  useLimit: NullableIntFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutPromoCodesInput
  uses: IntFieldUpdateOperationsInput
}

input PromoCodeUpdateWithoutUserDataInput {
  affectsAll: BoolFieldUpdateOperationsInput
  code: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  expiresAt: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isArchived: BoolFieldUpdateOperationsInput
  percentOff: IntFieldUpdateOperationsInput
  product: ProductUpdateOneWithoutPromoCodesInput
  transactions: TransactionUpdateManyWithoutPromosInput
  useLimit: NullableIntFieldUpdateOperationsInput
  uses: IntFieldUpdateOperationsInput
}

input PromoCodeUpdateWithWhereUniqueWithoutProductInput {
  data: PromoCodeUpdateWithoutProductDataInput!
  where: PromoCodeWhereUniqueInput!
}

input PromoCodeUpdateWithWhereUniqueWithoutTransactionsInput {
  data: PromoCodeUpdateWithoutTransactionsDataInput!
  where: PromoCodeWhereUniqueInput!
}

input PromoCodeUpdateWithWhereUniqueWithoutUserInput {
  data: PromoCodeUpdateWithoutUserDataInput!
  where: PromoCodeWhereUniqueInput!
}

input PromoCodeUpsertWithWhereUniqueWithoutProductInput {
  create: PromoCodeCreateWithoutProductInput!
  update: PromoCodeUpdateWithoutProductDataInput!
  where: PromoCodeWhereUniqueInput!
}

input PromoCodeUpsertWithWhereUniqueWithoutTransactionsInput {
  create: PromoCodeCreateWithoutTransactionsInput!
  update: PromoCodeUpdateWithoutTransactionsDataInput!
  where: PromoCodeWhereUniqueInput!
}

input PromoCodeUpsertWithWhereUniqueWithoutUserInput {
  create: PromoCodeCreateWithoutUserInput!
  update: PromoCodeUpdateWithoutUserDataInput!
  where: PromoCodeWhereUniqueInput!
}

input PromoCodeWhereInput {
  affectsAll: BoolFilter
  AND: [PromoCodeWhereInput]
  code: StringFilter
  createdAt: DateTimeFilter
  expiresAt: DateTimeNullableFilter
  id: StringFilter
  isArchived: BoolFilter
  NOT: [PromoCodeWhereInput]
  OR: [PromoCodeWhereInput]
  percentOff: IntFilter
  product: ProductWhereInput
  productId: StringNullableFilter
  transactions: TransactionListRelationFilter
  useLimit: IntNullableFilter
  user: UserWhereInput
  userId: StringFilter
  uses: IntFilter
}

input PromoCodeWhereUniqueInput {
  code: String
  id: String
}

type Query {
  calculateCart(productIds: [String!]!, promoCode: String): String!
  featuredProducts(after: ProductWhereUniqueInput, first: Int): [Product!]!
  files(after: FileWhereUniqueInput, before: FileWhereUniqueInput, first: Int, last: Int, where: QueryFilesWhereInput): [File!]!
  getDiscordOauthUrl: String!
  getFileURLs(licenseKey: String!): String!
  getRandomAd: Ad
  images(after: ImageWhereUniqueInput, before: ImageWhereUniqueInput, first: Int, last: Int, where: QueryImagesWhereInput): [Image!]!
  me: User
  mySales(after: TransactionWhereUniqueInput, first: Int): [Payout!]!
  oneTimeCodes(after: OneTimeCodeWhereUniqueInput, before: OneTimeCodeWhereUniqueInput, first: Int, last: Int, where: QueryOneTimeCodesWhereInput): [OneTimeCode!]!
  product(where: ProductWhereUniqueInput!): Product
  productCount(username: String): Int!
  products(after: ProductWhereUniqueInput, before: ProductWhereUniqueInput, first: Int, last: Int, orderBy: [QueryProductsOrderByInput], where: QueryProductsWhereInput): [Product!]!
  promoCode(where: PromoCodeWhereUniqueInput!): PromoCode
  promoCodes(after: PromoCodeWhereUniqueInput, before: PromoCodeWhereUniqueInput, first: Int, last: Int, where: QueryPromoCodesWhereInput): [PromoCode!]!
  reviews(after: ReviewWhereUniqueInput, before: ReviewWhereUniqueInput, first: Int, last: Int, orderBy: [ReviewOrderByInput], where: QueryReviewsWhereInput): [Review!]!
  tag(where: TagWhereUniqueInput!): Tag
  tags(after: TagWhereUniqueInput, before: TagWhereUniqueInput, first: Int, last: Int): [Tag!]!
  transaction(where: TransactionWhereUniqueInput!): Transaction
  transactions(after: TransactionWhereUniqueInput, before: TransactionWhereUniqueInput, first: Int, last: Int, orderBy: [TransactionOrderByInput], where: QueryTransactionsWhereInput): [Transaction!]!
  user(where: UserWhereUniqueInput!): User
  withdraws(after: WithdrawWhereUniqueInput, before: WithdrawWhereUniqueInput, first: Int, last: Int, where: QueryWithdrawsWhereInput): [Withdraw!]!
}

input QueryFilesWhereInput {
  isArchived: BoolFilter
  product: ProductWhereInput
}

input QueryImagesWhereInput {
  isArchived: BoolFilter
  productId: StringNullableFilter
}

input QueryOneTimeCodesWhereInput {
  code: StringFilter
}

input QueryProductsOrderByInput {
  amount: SortOrder
  createdAt: SortOrder
  name: SortOrder
}

input QueryProductsWhereInput {
  isArchived: BoolFilter
  tags: TagListRelationFilter
}

input QueryPromoCodesWhereInput {
  isArchived: BoolFilter
  user: UserWhereInput
}

input QueryReviewsWhereInput {
  author: UserWhereInput
  product: ProductWhereInput
}

input QueryTransactionsWhereInput {
  buyer: UserWhereInput
  products: ProductListRelationFilter
}

input QueryWithdrawsWhereInput {
  user: UserWhereInput
}

type Report {
  createdAt: DateTime!
  id: String!
  message: String!
  product: Product!
  reporter: User!
  resolved: Boolean!
}

input ReportCreateInput {
  createdAt: DateTime
  id: String
  message: String!
  product: ProductCreateOneWithoutReportsInput!
  resolved: Boolean
}

input ReportCreateManyWithoutProductInput {
  connect: [ReportWhereUniqueInput]
  create: [ReportCreateWithoutProductInput]
}

input ReportCreateManyWithoutReporterInput {
  connect: [ReportWhereUniqueInput]
  create: [ReportCreateWithoutReporterInput]
}

input ReportCreateWithoutProductInput {
  createdAt: DateTime
  id: String
  message: String!
  reporter: UserCreateOneWithoutReportsInput!
  resolved: Boolean
}

input ReportCreateWithoutReporterInput {
  createdAt: DateTime
  id: String
  message: String!
  product: ProductCreateOneWithoutReportsInput!
  resolved: Boolean
}

input ReportListRelationFilter {
  every: ReportWhereInput
  none: ReportWhereInput
  some: ReportWhereInput
}

input ReportScalarWhereInput {
  AND: [ReportScalarWhereInput]
  createdAt: DateTimeFilter
  id: StringFilter
  message: StringFilter
  NOT: [ReportScalarWhereInput]
  OR: [ReportScalarWhereInput]
  productId: StringFilter
  resolved: BoolFilter
  userId: StringFilter
}

input ReportUpdateManyDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  message: StringFieldUpdateOperationsInput
  resolved: BoolFieldUpdateOperationsInput
}

input ReportUpdateManyWithoutProductInput {
  connect: [ReportWhereUniqueInput]
  create: [ReportCreateWithoutProductInput]
  delete: [ReportWhereUniqueInput]
  deleteMany: [ReportScalarWhereInput]
  disconnect: [ReportWhereUniqueInput]
  set: [ReportWhereUniqueInput]
  update: [ReportUpdateWithWhereUniqueWithoutProductInput]
  updateMany: [ReportUpdateManyWithWhereNestedInput]
  upsert: [ReportUpsertWithWhereUniqueWithoutProductInput]
}

input ReportUpdateManyWithoutReporterInput {
  connect: [ReportWhereUniqueInput]
  create: [ReportCreateWithoutReporterInput]
  delete: [ReportWhereUniqueInput]
  deleteMany: [ReportScalarWhereInput]
  disconnect: [ReportWhereUniqueInput]
  set: [ReportWhereUniqueInput]
  update: [ReportUpdateWithWhereUniqueWithoutReporterInput]
  updateMany: [ReportUpdateManyWithWhereNestedInput]
  upsert: [ReportUpsertWithWhereUniqueWithoutReporterInput]
}

input ReportUpdateManyWithWhereNestedInput {
  data: ReportUpdateManyDataInput!
  where: ReportScalarWhereInput!
}

input ReportUpdateWithoutProductDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  message: StringFieldUpdateOperationsInput
  reporter: UserUpdateOneRequiredWithoutReportsInput
  resolved: BoolFieldUpdateOperationsInput
}

input ReportUpdateWithoutReporterDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  message: StringFieldUpdateOperationsInput
  product: ProductUpdateOneRequiredWithoutReportsInput
  resolved: BoolFieldUpdateOperationsInput
}

input ReportUpdateWithWhereUniqueWithoutProductInput {
  data: ReportUpdateWithoutProductDataInput!
  where: ReportWhereUniqueInput!
}

input ReportUpdateWithWhereUniqueWithoutReporterInput {
  data: ReportUpdateWithoutReporterDataInput!
  where: ReportWhereUniqueInput!
}

input ReportUpsertWithWhereUniqueWithoutProductInput {
  create: ReportCreateWithoutProductInput!
  update: ReportUpdateWithoutProductDataInput!
  where: ReportWhereUniqueInput!
}

input ReportUpsertWithWhereUniqueWithoutReporterInput {
  create: ReportCreateWithoutReporterInput!
  update: ReportUpdateWithoutReporterDataInput!
  where: ReportWhereUniqueInput!
}

input ReportWhereInput {
  AND: [ReportWhereInput]
  createdAt: DateTimeFilter
  id: StringFilter
  message: StringFilter
  NOT: [ReportWhereInput]
  OR: [ReportWhereInput]
  product: ProductWhereInput
  productId: StringFilter
  reporter: UserWhereInput
  resolved: BoolFilter
  userId: StringFilter
}

input ReportWhereUniqueInput {
  id: String
}

type Review {
  author: User!
  createdAt: DateTime!
  id: String!
  message: String!
  product: Product!
  stars: Int!
  updatedAt: DateTime!
}

input ReviewCreateInput {
  createdAt: DateTime
  id: String
  isArchived: Boolean
  message: String!
  product: ProductCreateOneWithoutReviewsInput!
  stars: Int!
  updatedAt: DateTime
}

input ReviewCreateManyWithoutAuthorInput {
  connect: [ReviewWhereUniqueInput]
  create: [ReviewCreateWithoutAuthorInput]
}

input ReviewCreateManyWithoutProductInput {
  connect: [ReviewWhereUniqueInput]
  create: [ReviewCreateWithoutProductInput]
}

input ReviewCreateWithoutAuthorInput {
  createdAt: DateTime
  id: String
  isArchived: Boolean
  message: String!
  product: ProductCreateOneWithoutReviewsInput!
  stars: Int!
  updatedAt: DateTime
}

input ReviewCreateWithoutProductInput {
  author: UserCreateOneWithoutReviewsInput!
  createdAt: DateTime
  id: String
  isArchived: Boolean
  message: String!
  stars: Int!
  updatedAt: DateTime
}

input ReviewListRelationFilter {
  every: ReviewWhereInput
  none: ReviewWhereInput
  some: ReviewWhereInput
}

input ReviewOrderByInput {
  authorId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  isArchived: SortOrder
  message: SortOrder
  productId: SortOrder
  stars: SortOrder
  updatedAt: SortOrder
}

input ReviewScalarWhereInput {
  AND: [ReviewScalarWhereInput]
  authorId: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  isArchived: BoolFilter
  message: StringFilter
  NOT: [ReviewScalarWhereInput]
  OR: [ReviewScalarWhereInput]
  productId: StringFilter
  stars: IntFilter
  updatedAt: DateTimeFilter
}

input ReviewUpdateManyDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isArchived: BoolFieldUpdateOperationsInput
  message: StringFieldUpdateOperationsInput
  stars: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ReviewUpdateManyWithoutAuthorInput {
  connect: [ReviewWhereUniqueInput]
  create: [ReviewCreateWithoutAuthorInput]
  delete: [ReviewWhereUniqueInput]
  deleteMany: [ReviewScalarWhereInput]
  disconnect: [ReviewWhereUniqueInput]
  set: [ReviewWhereUniqueInput]
  update: [ReviewUpdateWithWhereUniqueWithoutAuthorInput]
  updateMany: [ReviewUpdateManyWithWhereNestedInput]
  upsert: [ReviewUpsertWithWhereUniqueWithoutAuthorInput]
}

input ReviewUpdateManyWithoutProductInput {
  connect: [ReviewWhereUniqueInput]
  create: [ReviewCreateWithoutProductInput]
  delete: [ReviewWhereUniqueInput]
  deleteMany: [ReviewScalarWhereInput]
  disconnect: [ReviewWhereUniqueInput]
  set: [ReviewWhereUniqueInput]
  update: [ReviewUpdateWithWhereUniqueWithoutProductInput]
  updateMany: [ReviewUpdateManyWithWhereNestedInput]
  upsert: [ReviewUpsertWithWhereUniqueWithoutProductInput]
}

input ReviewUpdateManyWithWhereNestedInput {
  data: ReviewUpdateManyDataInput!
  where: ReviewScalarWhereInput!
}

input ReviewUpdateWithoutAuthorDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isArchived: BoolFieldUpdateOperationsInput
  message: StringFieldUpdateOperationsInput
  product: ProductUpdateOneRequiredWithoutReviewsInput
  stars: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ReviewUpdateWithoutProductDataInput {
  author: UserUpdateOneRequiredWithoutReviewsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isArchived: BoolFieldUpdateOperationsInput
  message: StringFieldUpdateOperationsInput
  stars: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ReviewUpdateWithWhereUniqueWithoutAuthorInput {
  data: ReviewUpdateWithoutAuthorDataInput!
  where: ReviewWhereUniqueInput!
}

input ReviewUpdateWithWhereUniqueWithoutProductInput {
  data: ReviewUpdateWithoutProductDataInput!
  where: ReviewWhereUniqueInput!
}

input ReviewUpsertWithWhereUniqueWithoutAuthorInput {
  create: ReviewCreateWithoutAuthorInput!
  update: ReviewUpdateWithoutAuthorDataInput!
  where: ReviewWhereUniqueInput!
}

input ReviewUpsertWithWhereUniqueWithoutProductInput {
  create: ReviewCreateWithoutProductInput!
  update: ReviewUpdateWithoutProductDataInput!
  where: ReviewWhereUniqueInput!
}

input ReviewWhereInput {
  AND: [ReviewWhereInput]
  author: UserWhereInput
  authorId: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  isArchived: BoolFilter
  message: StringFilter
  NOT: [ReviewWhereInput]
  OR: [ReviewWhereInput]
  product: ProductWhereInput
  productId: StringFilter
  stars: IntFilter
  updatedAt: DateTimeFilter
}

input ReviewWhereUniqueInput {
  id: String
}

enum SortOrder {
  asc
  desc
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String]
  startsWith: String
}

type Tag {
  id: String!
  name: String!
  products(after: ProductWhereUniqueInput, before: ProductWhereUniqueInput, first: Int, last: Int, where: TagProductsWhereInput): [Product!]!
}

input TagCreateManyWithoutCreatorInput {
  connect: [TagWhereUniqueInput]
  create: [TagCreateWithoutCreatorInput]
}

input TagCreateManyWithoutProductsInput {
  connect: [TagWhereUniqueInput]
  create: [TagCreateWithoutProductsInput]
}

input TagCreateWithoutCreatorInput {
  createdAt: DateTime
  id: String
  name: String!
  products: ProductCreateManyWithoutTagsInput
}

input TagCreateWithoutProductsInput {
  createdAt: DateTime
  creator: UserCreateOneWithoutCreatedTagsInput!
  id: String
  name: String!
}

input TagListRelationFilter {
  every: TagWhereInput
  none: TagWhereInput
  some: TagWhereInput
}

input TagProductsWhereInput {
  isArchived: BoolFilter
}

input TagScalarWhereInput {
  AND: [TagScalarWhereInput]
  createdAt: DateTimeFilter
  creatorId: StringFilter
  id: StringFilter
  name: StringFilter
  NOT: [TagScalarWhereInput]
  OR: [TagScalarWhereInput]
}

input TagUpdateManyDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input TagUpdateManyWithoutCreatorInput {
  connect: [TagWhereUniqueInput]
  create: [TagCreateWithoutCreatorInput]
  delete: [TagWhereUniqueInput]
  deleteMany: [TagScalarWhereInput]
  disconnect: [TagWhereUniqueInput]
  set: [TagWhereUniqueInput]
  update: [TagUpdateWithWhereUniqueWithoutCreatorInput]
  updateMany: [TagUpdateManyWithWhereNestedInput]
  upsert: [TagUpsertWithWhereUniqueWithoutCreatorInput]
}

input TagUpdateManyWithoutProductsInput {
  connect: [TagWhereUniqueInput]
  create: [TagCreateWithoutProductsInput]
  delete: [TagWhereUniqueInput]
  deleteMany: [TagScalarWhereInput]
  disconnect: [TagWhereUniqueInput]
  set: [TagWhereUniqueInput]
  update: [TagUpdateWithWhereUniqueWithoutProductsInput]
  updateMany: [TagUpdateManyWithWhereNestedInput]
  upsert: [TagUpsertWithWhereUniqueWithoutProductsInput]
}

input TagUpdateManyWithWhereNestedInput {
  data: TagUpdateManyDataInput!
  where: TagScalarWhereInput!
}

input TagUpdateWithoutCreatorDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  products: ProductUpdateManyWithoutTagsInput
}

input TagUpdateWithoutProductsDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  creator: UserUpdateOneRequiredWithoutCreatedTagsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input TagUpdateWithWhereUniqueWithoutCreatorInput {
  data: TagUpdateWithoutCreatorDataInput!
  where: TagWhereUniqueInput!
}

input TagUpdateWithWhereUniqueWithoutProductsInput {
  data: TagUpdateWithoutProductsDataInput!
  where: TagWhereUniqueInput!
}

input TagUpsertWithWhereUniqueWithoutCreatorInput {
  create: TagCreateWithoutCreatorInput!
  update: TagUpdateWithoutCreatorDataInput!
  where: TagWhereUniqueInput!
}

input TagUpsertWithWhereUniqueWithoutProductsInput {
  create: TagCreateWithoutProductsInput!
  update: TagUpdateWithoutProductsDataInput!
  where: TagWhereUniqueInput!
}

input TagWhereInput {
  AND: [TagWhereInput]
  createdAt: DateTimeFilter
  creator: UserWhereInput
  creatorId: StringFilter
  id: StringFilter
  name: StringFilter
  NOT: [TagWhereInput]
  OR: [TagWhereInput]
  products: ProductListRelationFilter
}

input TagWhereUniqueInput {
  id: String
}

type Transaction {
  amount: Float!
  buyer: User
  createdAt: DateTime!
  id: String!
  licenseKey: String
  licenseKeyShown: Int!
  licenseRedeemed: Boolean!
  products(after: ProductWhereUniqueInput, before: ProductWhereUniqueInput, first: Int, last: Int): [Product!]!
}

input TransactionCreateInput {
  amount: Float
  approved: Boolean
  buyer: UserCreateOneWithoutTransactionsInput
  createdAt: DateTime
  email: String
  id: String
  licenseKey: String
  licenseKeyShown: Int
  licenseRedeemed: Boolean
  payouts: PayoutCreateManyWithoutTransactionInput
  paypalPaymentId: String
  products: ProductCreateManyWithoutTransactionsInput
  promos: PromoCodeCreateManyWithoutTransactionsInput
  updatedAt: DateTime
}

input TransactionCreateManyWithoutBuyerInput {
  connect: [TransactionWhereUniqueInput]
  create: [TransactionCreateWithoutBuyerInput]
}

input TransactionCreateManyWithoutProductsInput {
  connect: [TransactionWhereUniqueInput]
  create: [TransactionCreateWithoutProductsInput]
}

input TransactionCreateManyWithoutPromosInput {
  connect: [TransactionWhereUniqueInput]
  create: [TransactionCreateWithoutPromosInput]
}

input TransactionCreateOneWithoutPayoutsInput {
  connect: TransactionWhereUniqueInput
  create: TransactionCreateWithoutPayoutsInput
}

input TransactionCreateWithoutBuyerInput {
  amount: Float
  approved: Boolean
  createdAt: DateTime
  email: String
  id: String
  licenseKey: String
  licenseKeyShown: Int
  licenseRedeemed: Boolean
  payouts: PayoutCreateManyWithoutTransactionInput
  paypalPaymentId: String
  products: ProductCreateManyWithoutTransactionsInput
  promos: PromoCodeCreateManyWithoutTransactionsInput
  updatedAt: DateTime
}

input TransactionCreateWithoutPayoutsInput {
  amount: Float
  approved: Boolean
  buyer: UserCreateOneWithoutTransactionsInput
  createdAt: DateTime
  email: String
  id: String
  licenseKey: String
  licenseKeyShown: Int
  licenseRedeemed: Boolean
  paypalPaymentId: String
  products: ProductCreateManyWithoutTransactionsInput
  promos: PromoCodeCreateManyWithoutTransactionsInput
  updatedAt: DateTime
}

input TransactionCreateWithoutProductsInput {
  amount: Float
  approved: Boolean
  buyer: UserCreateOneWithoutTransactionsInput
  createdAt: DateTime
  email: String
  id: String
  licenseKey: String
  licenseKeyShown: Int
  licenseRedeemed: Boolean
  payouts: PayoutCreateManyWithoutTransactionInput
  paypalPaymentId: String
  promos: PromoCodeCreateManyWithoutTransactionsInput
  updatedAt: DateTime
}

input TransactionCreateWithoutPromosInput {
  amount: Float
  approved: Boolean
  buyer: UserCreateOneWithoutTransactionsInput
  createdAt: DateTime
  email: String
  id: String
  licenseKey: String
  licenseKeyShown: Int
  licenseRedeemed: Boolean
  payouts: PayoutCreateManyWithoutTransactionInput
  paypalPaymentId: String
  products: ProductCreateManyWithoutTransactionsInput
  updatedAt: DateTime
}

input TransactionListRelationFilter {
  every: TransactionWhereInput
  none: TransactionWhereInput
  some: TransactionWhereInput
}

input TransactionOrderByInput {
  amount: SortOrder
  approved: SortOrder
  buyerId: SortOrder
  createdAt: SortOrder
  email: SortOrder
  id: SortOrder
  licenseKey: SortOrder
  licenseKeyShown: SortOrder
  licenseRedeemed: SortOrder
  paypalPaymentId: SortOrder
  updatedAt: SortOrder
}

input TransactionScalarWhereInput {
  amount: FloatFilter
  AND: [TransactionScalarWhereInput]
  approved: BoolFilter
  buyerId: StringNullableFilter
  createdAt: DateTimeFilter
  email: StringNullableFilter
  id: StringFilter
  licenseKey: StringNullableFilter
  licenseKeyShown: IntFilter
  licenseRedeemed: BoolFilter
  NOT: [TransactionScalarWhereInput]
  OR: [TransactionScalarWhereInput]
  paypalPaymentId: StringNullableFilter
  updatedAt: DateTimeFilter
}

input TransactionUpdateManyDataInput {
  amount: FloatFieldUpdateOperationsInput
  approved: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  licenseKey: NullableStringFieldUpdateOperationsInput
  licenseKeyShown: IntFieldUpdateOperationsInput
  licenseRedeemed: BoolFieldUpdateOperationsInput
  paypalPaymentId: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TransactionUpdateManyWithoutBuyerInput {
  connect: [TransactionWhereUniqueInput]
  create: [TransactionCreateWithoutBuyerInput]
  delete: [TransactionWhereUniqueInput]
  deleteMany: [TransactionScalarWhereInput]
  disconnect: [TransactionWhereUniqueInput]
  set: [TransactionWhereUniqueInput]
  update: [TransactionUpdateWithWhereUniqueWithoutBuyerInput]
  updateMany: [TransactionUpdateManyWithWhereNestedInput]
  upsert: [TransactionUpsertWithWhereUniqueWithoutBuyerInput]
}

input TransactionUpdateManyWithoutProductsInput {
  connect: [TransactionWhereUniqueInput]
  create: [TransactionCreateWithoutProductsInput]
  delete: [TransactionWhereUniqueInput]
  deleteMany: [TransactionScalarWhereInput]
  disconnect: [TransactionWhereUniqueInput]
  set: [TransactionWhereUniqueInput]
  update: [TransactionUpdateWithWhereUniqueWithoutProductsInput]
  updateMany: [TransactionUpdateManyWithWhereNestedInput]
  upsert: [TransactionUpsertWithWhereUniqueWithoutProductsInput]
}

input TransactionUpdateManyWithoutPromosInput {
  connect: [TransactionWhereUniqueInput]
  create: [TransactionCreateWithoutPromosInput]
  delete: [TransactionWhereUniqueInput]
  deleteMany: [TransactionScalarWhereInput]
  disconnect: [TransactionWhereUniqueInput]
  set: [TransactionWhereUniqueInput]
  update: [TransactionUpdateWithWhereUniqueWithoutPromosInput]
  updateMany: [TransactionUpdateManyWithWhereNestedInput]
  upsert: [TransactionUpsertWithWhereUniqueWithoutPromosInput]
}

input TransactionUpdateManyWithWhereNestedInput {
  data: TransactionUpdateManyDataInput!
  where: TransactionScalarWhereInput!
}

input TransactionUpdateOneRequiredWithoutPayoutsInput {
  connect: TransactionWhereUniqueInput
  create: TransactionCreateWithoutPayoutsInput
  update: TransactionUpdateWithoutPayoutsDataInput
  upsert: TransactionUpsertWithoutPayoutsInput
}

input TransactionUpdateWithoutBuyerDataInput {
  amount: FloatFieldUpdateOperationsInput
  approved: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  licenseKey: NullableStringFieldUpdateOperationsInput
  licenseKeyShown: IntFieldUpdateOperationsInput
  licenseRedeemed: BoolFieldUpdateOperationsInput
  payouts: PayoutUpdateManyWithoutTransactionInput
  paypalPaymentId: NullableStringFieldUpdateOperationsInput
  products: ProductUpdateManyWithoutTransactionsInput
  promos: PromoCodeUpdateManyWithoutTransactionsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TransactionUpdateWithoutPayoutsDataInput {
  amount: FloatFieldUpdateOperationsInput
  approved: BoolFieldUpdateOperationsInput
  buyer: UserUpdateOneWithoutTransactionsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  licenseKey: NullableStringFieldUpdateOperationsInput
  licenseKeyShown: IntFieldUpdateOperationsInput
  licenseRedeemed: BoolFieldUpdateOperationsInput
  paypalPaymentId: NullableStringFieldUpdateOperationsInput
  products: ProductUpdateManyWithoutTransactionsInput
  promos: PromoCodeUpdateManyWithoutTransactionsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TransactionUpdateWithoutProductsDataInput {
  amount: FloatFieldUpdateOperationsInput
  approved: BoolFieldUpdateOperationsInput
  buyer: UserUpdateOneWithoutTransactionsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  licenseKey: NullableStringFieldUpdateOperationsInput
  licenseKeyShown: IntFieldUpdateOperationsInput
  licenseRedeemed: BoolFieldUpdateOperationsInput
  payouts: PayoutUpdateManyWithoutTransactionInput
  paypalPaymentId: NullableStringFieldUpdateOperationsInput
  promos: PromoCodeUpdateManyWithoutTransactionsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TransactionUpdateWithoutPromosDataInput {
  amount: FloatFieldUpdateOperationsInput
  approved: BoolFieldUpdateOperationsInput
  buyer: UserUpdateOneWithoutTransactionsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  licenseKey: NullableStringFieldUpdateOperationsInput
  licenseKeyShown: IntFieldUpdateOperationsInput
  licenseRedeemed: BoolFieldUpdateOperationsInput
  payouts: PayoutUpdateManyWithoutTransactionInput
  paypalPaymentId: NullableStringFieldUpdateOperationsInput
  products: ProductUpdateManyWithoutTransactionsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TransactionUpdateWithWhereUniqueWithoutBuyerInput {
  data: TransactionUpdateWithoutBuyerDataInput!
  where: TransactionWhereUniqueInput!
}

input TransactionUpdateWithWhereUniqueWithoutProductsInput {
  data: TransactionUpdateWithoutProductsDataInput!
  where: TransactionWhereUniqueInput!
}

input TransactionUpdateWithWhereUniqueWithoutPromosInput {
  data: TransactionUpdateWithoutPromosDataInput!
  where: TransactionWhereUniqueInput!
}

input TransactionUpsertWithoutPayoutsInput {
  create: TransactionCreateWithoutPayoutsInput!
  update: TransactionUpdateWithoutPayoutsDataInput!
}

input TransactionUpsertWithWhereUniqueWithoutBuyerInput {
  create: TransactionCreateWithoutBuyerInput!
  update: TransactionUpdateWithoutBuyerDataInput!
  where: TransactionWhereUniqueInput!
}

input TransactionUpsertWithWhereUniqueWithoutProductsInput {
  create: TransactionCreateWithoutProductsInput!
  update: TransactionUpdateWithoutProductsDataInput!
  where: TransactionWhereUniqueInput!
}

input TransactionUpsertWithWhereUniqueWithoutPromosInput {
  create: TransactionCreateWithoutPromosInput!
  update: TransactionUpdateWithoutPromosDataInput!
  where: TransactionWhereUniqueInput!
}

input TransactionWhereInput {
  amount: FloatFilter
  AND: [TransactionWhereInput]
  approved: BoolFilter
  buyer: UserWhereInput
  buyerId: StringNullableFilter
  createdAt: DateTimeFilter
  email: StringNullableFilter
  id: StringFilter
  licenseKey: StringNullableFilter
  licenseKeyShown: IntFilter
  licenseRedeemed: BoolFilter
  NOT: [TransactionWhereInput]
  OR: [TransactionWhereInput]
  payouts: PayoutListRelationFilter
  paypalPaymentId: StringNullableFilter
  products: ProductListRelationFilter
  promos: PromoCodeListRelationFilter
  updatedAt: DateTimeFilter
}

input TransactionWhereUniqueInput {
  id: String
  licenseKey: String
}

type User {
  accountType: AccountType!
  adTokens: Float!
  avatarURL: String
  createdAt: DateTime!
  discordId: String
  displayName: String
  email: String!
  emailOnSale: Boolean!
  emailUpdates: Boolean!
  emailVerified: Boolean!
  favorites(after: ProductWhereUniqueInput, before: ProductWhereUniqueInput, first: Int, last: Int): [Product!]!
  id: String!
  isVerified: Boolean!
  paidBalance: Float!
  paypalEmail: String
  productQuotaPercent: Int!
  products(after: ProductWhereUniqueInput, before: ProductWhereUniqueInput, first: Int, last: Int, orderBy: [UserProductsOrderByInput], where: UserProductsWhereInput): [Product!]!
  storageQuotaPercent: Int!
  transactions(after: TransactionWhereUniqueInput, before: TransactionWhereUniqueInput, first: Int, last: Int): [Transaction!]!
  unpaidBalance: Float!
  username: String!
}

input UserCreateManyWithoutFavoritesInput {
  connect: [UserWhereUniqueInput]
  create: [UserCreateWithoutFavoritesInput]
}

input UserCreateOneWithoutCreatedTagsInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutCreatedTagsInput
}

input UserCreateOneWithoutPayoutsInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutPayoutsInput
}

input UserCreateOneWithoutProductsInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutProductsInput
}

input UserCreateOneWithoutPromoCodesInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutPromoCodesInput
}

input UserCreateOneWithoutReportsInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutReportsInput
}

input UserCreateOneWithoutReviewsInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutReviewsInput
}

input UserCreateOneWithoutTransactionsInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutTransactionsInput
}

input UserCreateWithoutCreatedTagsInput {
  accountType: AccountType
  adTokens: Float
  avatarURL: String
  createdAt: DateTime
  discordId: String
  displayName: String
  email: String!
  emailOnSale: Boolean
  emailUpdates: Boolean
  emailVerified: Boolean
  emailVerifyToken: String
  favorites: ProductCreateManyWithoutUsersInput
  id: String
  isAdmin: Boolean
  isVerified: Boolean
  paidBalance: Float
  password: String!
  passwordResetToken: String
  payouts: PayoutCreateManyWithoutUserInput
  paypalEmail: String
  products: ProductCreateManyWithoutOwnerInput
  promoCodes: PromoCodeCreateManyWithoutUserInput
  reports: ReportCreateManyWithoutReporterInput
  reviews: ReviewCreateManyWithoutAuthorInput
  transactions: TransactionCreateManyWithoutBuyerInput
  unpaidBalance: Float
  updatedAt: DateTime
  username: String!
  verifiedAt: DateTime
  withdraws: WithdrawCreateManyWithoutUserInput
}

input UserCreateWithoutFavoritesInput {
  accountType: AccountType
  adTokens: Float
  avatarURL: String
  createdAt: DateTime
  createdTags: TagCreateManyWithoutCreatorInput
  discordId: String
  displayName: String
  email: String!
  emailOnSale: Boolean
  emailUpdates: Boolean
  emailVerified: Boolean
  emailVerifyToken: String
  id: String
  isAdmin: Boolean
  isVerified: Boolean
  paidBalance: Float
  password: String!
  passwordResetToken: String
  payouts: PayoutCreateManyWithoutUserInput
  paypalEmail: String
  products: ProductCreateManyWithoutOwnerInput
  promoCodes: PromoCodeCreateManyWithoutUserInput
  reports: ReportCreateManyWithoutReporterInput
  reviews: ReviewCreateManyWithoutAuthorInput
  transactions: TransactionCreateManyWithoutBuyerInput
  unpaidBalance: Float
  updatedAt: DateTime
  username: String!
  verifiedAt: DateTime
  withdraws: WithdrawCreateManyWithoutUserInput
}

input UserCreateWithoutPayoutsInput {
  accountType: AccountType
  adTokens: Float
  avatarURL: String
  createdAt: DateTime
  createdTags: TagCreateManyWithoutCreatorInput
  discordId: String
  displayName: String
  email: String!
  emailOnSale: Boolean
  emailUpdates: Boolean
  emailVerified: Boolean
  emailVerifyToken: String
  favorites: ProductCreateManyWithoutUsersInput
  id: String
  isAdmin: Boolean
  isVerified: Boolean
  paidBalance: Float
  password: String!
  passwordResetToken: String
  paypalEmail: String
  products: ProductCreateManyWithoutOwnerInput
  promoCodes: PromoCodeCreateManyWithoutUserInput
  reports: ReportCreateManyWithoutReporterInput
  reviews: ReviewCreateManyWithoutAuthorInput
  transactions: TransactionCreateManyWithoutBuyerInput
  unpaidBalance: Float
  updatedAt: DateTime
  username: String!
  verifiedAt: DateTime
  withdraws: WithdrawCreateManyWithoutUserInput
}

input UserCreateWithoutProductsInput {
  accountType: AccountType
  adTokens: Float
  avatarURL: String
  createdAt: DateTime
  createdTags: TagCreateManyWithoutCreatorInput
  discordId: String
  displayName: String
  email: String!
  emailOnSale: Boolean
  emailUpdates: Boolean
  emailVerified: Boolean
  emailVerifyToken: String
  favorites: ProductCreateManyWithoutUsersInput
  id: String
  isAdmin: Boolean
  isVerified: Boolean
  paidBalance: Float
  password: String!
  passwordResetToken: String
  payouts: PayoutCreateManyWithoutUserInput
  paypalEmail: String
  promoCodes: PromoCodeCreateManyWithoutUserInput
  reports: ReportCreateManyWithoutReporterInput
  reviews: ReviewCreateManyWithoutAuthorInput
  transactions: TransactionCreateManyWithoutBuyerInput
  unpaidBalance: Float
  updatedAt: DateTime
  username: String!
  verifiedAt: DateTime
  withdraws: WithdrawCreateManyWithoutUserInput
}

input UserCreateWithoutPromoCodesInput {
  accountType: AccountType
  adTokens: Float
  avatarURL: String
  createdAt: DateTime
  createdTags: TagCreateManyWithoutCreatorInput
  discordId: String
  displayName: String
  email: String!
  emailOnSale: Boolean
  emailUpdates: Boolean
  emailVerified: Boolean
  emailVerifyToken: String
  favorites: ProductCreateManyWithoutUsersInput
  id: String
  isAdmin: Boolean
  isVerified: Boolean
  paidBalance: Float
  password: String!
  passwordResetToken: String
  payouts: PayoutCreateManyWithoutUserInput
  paypalEmail: String
  products: ProductCreateManyWithoutOwnerInput
  reports: ReportCreateManyWithoutReporterInput
  reviews: ReviewCreateManyWithoutAuthorInput
  transactions: TransactionCreateManyWithoutBuyerInput
  unpaidBalance: Float
  updatedAt: DateTime
  username: String!
  verifiedAt: DateTime
  withdraws: WithdrawCreateManyWithoutUserInput
}

input UserCreateWithoutReportsInput {
  accountType: AccountType
  adTokens: Float
  avatarURL: String
  createdAt: DateTime
  createdTags: TagCreateManyWithoutCreatorInput
  discordId: String
  displayName: String
  email: String!
  emailOnSale: Boolean
  emailUpdates: Boolean
  emailVerified: Boolean
  emailVerifyToken: String
  favorites: ProductCreateManyWithoutUsersInput
  id: String
  isAdmin: Boolean
  isVerified: Boolean
  paidBalance: Float
  password: String!
  passwordResetToken: String
  payouts: PayoutCreateManyWithoutUserInput
  paypalEmail: String
  products: ProductCreateManyWithoutOwnerInput
  promoCodes: PromoCodeCreateManyWithoutUserInput
  reviews: ReviewCreateManyWithoutAuthorInput
  transactions: TransactionCreateManyWithoutBuyerInput
  unpaidBalance: Float
  updatedAt: DateTime
  username: String!
  verifiedAt: DateTime
  withdraws: WithdrawCreateManyWithoutUserInput
}

input UserCreateWithoutReviewsInput {
  accountType: AccountType
  adTokens: Float
  avatarURL: String
  createdAt: DateTime
  createdTags: TagCreateManyWithoutCreatorInput
  discordId: String
  displayName: String
  email: String!
  emailOnSale: Boolean
  emailUpdates: Boolean
  emailVerified: Boolean
  emailVerifyToken: String
  favorites: ProductCreateManyWithoutUsersInput
  id: String
  isAdmin: Boolean
  isVerified: Boolean
  paidBalance: Float
  password: String!
  passwordResetToken: String
  payouts: PayoutCreateManyWithoutUserInput
  paypalEmail: String
  products: ProductCreateManyWithoutOwnerInput
  promoCodes: PromoCodeCreateManyWithoutUserInput
  reports: ReportCreateManyWithoutReporterInput
  transactions: TransactionCreateManyWithoutBuyerInput
  unpaidBalance: Float
  updatedAt: DateTime
  username: String!
  verifiedAt: DateTime
  withdraws: WithdrawCreateManyWithoutUserInput
}

input UserCreateWithoutTransactionsInput {
  accountType: AccountType
  adTokens: Float
  avatarURL: String
  createdAt: DateTime
  createdTags: TagCreateManyWithoutCreatorInput
  discordId: String
  displayName: String
  email: String!
  emailOnSale: Boolean
  emailUpdates: Boolean
  emailVerified: Boolean
  emailVerifyToken: String
  favorites: ProductCreateManyWithoutUsersInput
  id: String
  isAdmin: Boolean
  isVerified: Boolean
  paidBalance: Float
  password: String!
  passwordResetToken: String
  payouts: PayoutCreateManyWithoutUserInput
  paypalEmail: String
  products: ProductCreateManyWithoutOwnerInput
  promoCodes: PromoCodeCreateManyWithoutUserInput
  reports: ReportCreateManyWithoutReporterInput
  reviews: ReviewCreateManyWithoutAuthorInput
  unpaidBalance: Float
  updatedAt: DateTime
  username: String!
  verifiedAt: DateTime
  withdraws: WithdrawCreateManyWithoutUserInput
}

input UserListRelationFilter {
  every: UserWhereInput
  none: UserWhereInput
  some: UserWhereInput
}

input UserProductsOrderByInput {
  amount: SortOrder
  createdAt: SortOrder
  name: SortOrder
}

input UserProductsWhereInput {
  isArchived: BoolFilter
}

input UserScalarWhereInput {
  accountType: AccountType
  adTokens: FloatFilter
  AND: [UserScalarWhereInput]
  avatarURL: StringNullableFilter
  createdAt: DateTimeFilter
  discordId: StringNullableFilter
  displayName: StringNullableFilter
  email: StringFilter
  emailOnSale: BoolFilter
  emailUpdates: BoolFilter
  emailVerified: BoolFilter
  emailVerifyToken: StringFilter
  id: StringFilter
  isAdmin: BoolFilter
  isVerified: BoolFilter
  NOT: [UserScalarWhereInput]
  OR: [UserScalarWhereInput]
  paidBalance: FloatFilter
  password: StringFilter
  passwordResetToken: StringFilter
  paypalEmail: StringNullableFilter
  unpaidBalance: FloatFilter
  updatedAt: DateTimeFilter
  username: StringFilter
  verifiedAt: DateTimeNullableFilter
}

input UserUpdateInput {
  accountType: AccountType
  adTokens: FloatFieldUpdateOperationsInput
  avatarURL: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdTags: TagUpdateManyWithoutCreatorInput
  discordId: NullableStringFieldUpdateOperationsInput
  displayName: NullableStringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  emailOnSale: BoolFieldUpdateOperationsInput
  emailUpdates: BoolFieldUpdateOperationsInput
  emailVerified: BoolFieldUpdateOperationsInput
  emailVerifyToken: StringFieldUpdateOperationsInput
  favorites: ProductUpdateManyWithoutUsersInput
  id: StringFieldUpdateOperationsInput
  isAdmin: BoolFieldUpdateOperationsInput
  isVerified: BoolFieldUpdateOperationsInput
  paidBalance: FloatFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  passwordResetToken: StringFieldUpdateOperationsInput
  payouts: PayoutUpdateManyWithoutUserInput
  paypalEmail: NullableStringFieldUpdateOperationsInput
  products: ProductUpdateManyWithoutOwnerInput
  promoCodes: PromoCodeUpdateManyWithoutUserInput
  reports: ReportUpdateManyWithoutReporterInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  transactions: TransactionUpdateManyWithoutBuyerInput
  unpaidBalance: FloatFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  verifiedAt: NullableDateTimeFieldUpdateOperationsInput
  withdraws: WithdrawUpdateManyWithoutUserInput
}

input UserUpdateManyDataInput {
  accountType: AccountType
  adTokens: FloatFieldUpdateOperationsInput
  avatarURL: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discordId: NullableStringFieldUpdateOperationsInput
  displayName: NullableStringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  emailOnSale: BoolFieldUpdateOperationsInput
  emailUpdates: BoolFieldUpdateOperationsInput
  emailVerified: BoolFieldUpdateOperationsInput
  emailVerifyToken: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isAdmin: BoolFieldUpdateOperationsInput
  isVerified: BoolFieldUpdateOperationsInput
  paidBalance: FloatFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  passwordResetToken: StringFieldUpdateOperationsInput
  paypalEmail: NullableStringFieldUpdateOperationsInput
  unpaidBalance: FloatFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  verifiedAt: NullableDateTimeFieldUpdateOperationsInput
}

input UserUpdateManyWithoutFavoritesInput {
  connect: [UserWhereUniqueInput]
  create: [UserCreateWithoutFavoritesInput]
  delete: [UserWhereUniqueInput]
  deleteMany: [UserScalarWhereInput]
  disconnect: [UserWhereUniqueInput]
  set: [UserWhereUniqueInput]
  update: [UserUpdateWithWhereUniqueWithoutFavoritesInput]
  updateMany: [UserUpdateManyWithWhereNestedInput]
  upsert: [UserUpsertWithWhereUniqueWithoutFavoritesInput]
}

input UserUpdateManyWithWhereNestedInput {
  data: UserUpdateManyDataInput!
  where: UserScalarWhereInput!
}

input UserUpdateOneRequiredWithoutCreatedTagsInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutCreatedTagsInput
  update: UserUpdateWithoutCreatedTagsDataInput
  upsert: UserUpsertWithoutCreatedTagsInput
}

input UserUpdateOneRequiredWithoutPromoCodesInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutPromoCodesInput
  update: UserUpdateWithoutPromoCodesDataInput
  upsert: UserUpsertWithoutPromoCodesInput
}

input UserUpdateOneRequiredWithoutReportsInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutReportsInput
  update: UserUpdateWithoutReportsDataInput
  upsert: UserUpsertWithoutReportsInput
}

input UserUpdateOneRequiredWithoutReviewsInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutReviewsInput
  update: UserUpdateWithoutReviewsDataInput
  upsert: UserUpsertWithoutReviewsInput
}

input UserUpdateOneWithoutPayoutsInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutPayoutsInput
  delete: Boolean
  disconnect: Boolean
  update: UserUpdateWithoutPayoutsDataInput
  upsert: UserUpsertWithoutPayoutsInput
}

input UserUpdateOneWithoutProductsInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutProductsInput
  delete: Boolean
  disconnect: Boolean
  update: UserUpdateWithoutProductsDataInput
  upsert: UserUpsertWithoutProductsInput
}

input UserUpdateOneWithoutTransactionsInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutTransactionsInput
  delete: Boolean
  disconnect: Boolean
  update: UserUpdateWithoutTransactionsDataInput
  upsert: UserUpsertWithoutTransactionsInput
}

input UserUpdateWithoutCreatedTagsDataInput {
  accountType: AccountType
  adTokens: FloatFieldUpdateOperationsInput
  avatarURL: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discordId: NullableStringFieldUpdateOperationsInput
  displayName: NullableStringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  emailOnSale: BoolFieldUpdateOperationsInput
  emailUpdates: BoolFieldUpdateOperationsInput
  emailVerified: BoolFieldUpdateOperationsInput
  emailVerifyToken: StringFieldUpdateOperationsInput
  favorites: ProductUpdateManyWithoutUsersInput
  id: StringFieldUpdateOperationsInput
  isAdmin: BoolFieldUpdateOperationsInput
  isVerified: BoolFieldUpdateOperationsInput
  paidBalance: FloatFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  passwordResetToken: StringFieldUpdateOperationsInput
  payouts: PayoutUpdateManyWithoutUserInput
  paypalEmail: NullableStringFieldUpdateOperationsInput
  products: ProductUpdateManyWithoutOwnerInput
  promoCodes: PromoCodeUpdateManyWithoutUserInput
  reports: ReportUpdateManyWithoutReporterInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  transactions: TransactionUpdateManyWithoutBuyerInput
  unpaidBalance: FloatFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  verifiedAt: NullableDateTimeFieldUpdateOperationsInput
  withdraws: WithdrawUpdateManyWithoutUserInput
}

input UserUpdateWithoutFavoritesDataInput {
  accountType: AccountType
  adTokens: FloatFieldUpdateOperationsInput
  avatarURL: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdTags: TagUpdateManyWithoutCreatorInput
  discordId: NullableStringFieldUpdateOperationsInput
  displayName: NullableStringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  emailOnSale: BoolFieldUpdateOperationsInput
  emailUpdates: BoolFieldUpdateOperationsInput
  emailVerified: BoolFieldUpdateOperationsInput
  emailVerifyToken: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isAdmin: BoolFieldUpdateOperationsInput
  isVerified: BoolFieldUpdateOperationsInput
  paidBalance: FloatFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  passwordResetToken: StringFieldUpdateOperationsInput
  payouts: PayoutUpdateManyWithoutUserInput
  paypalEmail: NullableStringFieldUpdateOperationsInput
  products: ProductUpdateManyWithoutOwnerInput
  promoCodes: PromoCodeUpdateManyWithoutUserInput
  reports: ReportUpdateManyWithoutReporterInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  transactions: TransactionUpdateManyWithoutBuyerInput
  unpaidBalance: FloatFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  verifiedAt: NullableDateTimeFieldUpdateOperationsInput
  withdraws: WithdrawUpdateManyWithoutUserInput
}

input UserUpdateWithoutPayoutsDataInput {
  accountType: AccountType
  adTokens: FloatFieldUpdateOperationsInput
  avatarURL: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdTags: TagUpdateManyWithoutCreatorInput
  discordId: NullableStringFieldUpdateOperationsInput
  displayName: NullableStringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  emailOnSale: BoolFieldUpdateOperationsInput
  emailUpdates: BoolFieldUpdateOperationsInput
  emailVerified: BoolFieldUpdateOperationsInput
  emailVerifyToken: StringFieldUpdateOperationsInput
  favorites: ProductUpdateManyWithoutUsersInput
  id: StringFieldUpdateOperationsInput
  isAdmin: BoolFieldUpdateOperationsInput
  isVerified: BoolFieldUpdateOperationsInput
  paidBalance: FloatFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  passwordResetToken: StringFieldUpdateOperationsInput
  paypalEmail: NullableStringFieldUpdateOperationsInput
  products: ProductUpdateManyWithoutOwnerInput
  promoCodes: PromoCodeUpdateManyWithoutUserInput
  reports: ReportUpdateManyWithoutReporterInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  transactions: TransactionUpdateManyWithoutBuyerInput
  unpaidBalance: FloatFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  verifiedAt: NullableDateTimeFieldUpdateOperationsInput
  withdraws: WithdrawUpdateManyWithoutUserInput
}

input UserUpdateWithoutProductsDataInput {
  accountType: AccountType
  adTokens: FloatFieldUpdateOperationsInput
  avatarURL: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdTags: TagUpdateManyWithoutCreatorInput
  discordId: NullableStringFieldUpdateOperationsInput
  displayName: NullableStringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  emailOnSale: BoolFieldUpdateOperationsInput
  emailUpdates: BoolFieldUpdateOperationsInput
  emailVerified: BoolFieldUpdateOperationsInput
  emailVerifyToken: StringFieldUpdateOperationsInput
  favorites: ProductUpdateManyWithoutUsersInput
  id: StringFieldUpdateOperationsInput
  isAdmin: BoolFieldUpdateOperationsInput
  isVerified: BoolFieldUpdateOperationsInput
  paidBalance: FloatFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  passwordResetToken: StringFieldUpdateOperationsInput
  payouts: PayoutUpdateManyWithoutUserInput
  paypalEmail: NullableStringFieldUpdateOperationsInput
  promoCodes: PromoCodeUpdateManyWithoutUserInput
  reports: ReportUpdateManyWithoutReporterInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  transactions: TransactionUpdateManyWithoutBuyerInput
  unpaidBalance: FloatFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  verifiedAt: NullableDateTimeFieldUpdateOperationsInput
  withdraws: WithdrawUpdateManyWithoutUserInput
}

input UserUpdateWithoutPromoCodesDataInput {
  accountType: AccountType
  adTokens: FloatFieldUpdateOperationsInput
  avatarURL: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdTags: TagUpdateManyWithoutCreatorInput
  discordId: NullableStringFieldUpdateOperationsInput
  displayName: NullableStringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  emailOnSale: BoolFieldUpdateOperationsInput
  emailUpdates: BoolFieldUpdateOperationsInput
  emailVerified: BoolFieldUpdateOperationsInput
  emailVerifyToken: StringFieldUpdateOperationsInput
  favorites: ProductUpdateManyWithoutUsersInput
  id: StringFieldUpdateOperationsInput
  isAdmin: BoolFieldUpdateOperationsInput
  isVerified: BoolFieldUpdateOperationsInput
  paidBalance: FloatFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  passwordResetToken: StringFieldUpdateOperationsInput
  payouts: PayoutUpdateManyWithoutUserInput
  paypalEmail: NullableStringFieldUpdateOperationsInput
  products: ProductUpdateManyWithoutOwnerInput
  reports: ReportUpdateManyWithoutReporterInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  transactions: TransactionUpdateManyWithoutBuyerInput
  unpaidBalance: FloatFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  verifiedAt: NullableDateTimeFieldUpdateOperationsInput
  withdraws: WithdrawUpdateManyWithoutUserInput
}

input UserUpdateWithoutReportsDataInput {
  accountType: AccountType
  adTokens: FloatFieldUpdateOperationsInput
  avatarURL: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdTags: TagUpdateManyWithoutCreatorInput
  discordId: NullableStringFieldUpdateOperationsInput
  displayName: NullableStringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  emailOnSale: BoolFieldUpdateOperationsInput
  emailUpdates: BoolFieldUpdateOperationsInput
  emailVerified: BoolFieldUpdateOperationsInput
  emailVerifyToken: StringFieldUpdateOperationsInput
  favorites: ProductUpdateManyWithoutUsersInput
  id: StringFieldUpdateOperationsInput
  isAdmin: BoolFieldUpdateOperationsInput
  isVerified: BoolFieldUpdateOperationsInput
  paidBalance: FloatFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  passwordResetToken: StringFieldUpdateOperationsInput
  payouts: PayoutUpdateManyWithoutUserInput
  paypalEmail: NullableStringFieldUpdateOperationsInput
  products: ProductUpdateManyWithoutOwnerInput
  promoCodes: PromoCodeUpdateManyWithoutUserInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  transactions: TransactionUpdateManyWithoutBuyerInput
  unpaidBalance: FloatFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  verifiedAt: NullableDateTimeFieldUpdateOperationsInput
  withdraws: WithdrawUpdateManyWithoutUserInput
}

input UserUpdateWithoutReviewsDataInput {
  accountType: AccountType
  adTokens: FloatFieldUpdateOperationsInput
  avatarURL: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdTags: TagUpdateManyWithoutCreatorInput
  discordId: NullableStringFieldUpdateOperationsInput
  displayName: NullableStringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  emailOnSale: BoolFieldUpdateOperationsInput
  emailUpdates: BoolFieldUpdateOperationsInput
  emailVerified: BoolFieldUpdateOperationsInput
  emailVerifyToken: StringFieldUpdateOperationsInput
  favorites: ProductUpdateManyWithoutUsersInput
  id: StringFieldUpdateOperationsInput
  isAdmin: BoolFieldUpdateOperationsInput
  isVerified: BoolFieldUpdateOperationsInput
  paidBalance: FloatFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  passwordResetToken: StringFieldUpdateOperationsInput
  payouts: PayoutUpdateManyWithoutUserInput
  paypalEmail: NullableStringFieldUpdateOperationsInput
  products: ProductUpdateManyWithoutOwnerInput
  promoCodes: PromoCodeUpdateManyWithoutUserInput
  reports: ReportUpdateManyWithoutReporterInput
  transactions: TransactionUpdateManyWithoutBuyerInput
  unpaidBalance: FloatFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  verifiedAt: NullableDateTimeFieldUpdateOperationsInput
  withdraws: WithdrawUpdateManyWithoutUserInput
}

input UserUpdateWithoutTransactionsDataInput {
  accountType: AccountType
  adTokens: FloatFieldUpdateOperationsInput
  avatarURL: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdTags: TagUpdateManyWithoutCreatorInput
  discordId: NullableStringFieldUpdateOperationsInput
  displayName: NullableStringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  emailOnSale: BoolFieldUpdateOperationsInput
  emailUpdates: BoolFieldUpdateOperationsInput
  emailVerified: BoolFieldUpdateOperationsInput
  emailVerifyToken: StringFieldUpdateOperationsInput
  favorites: ProductUpdateManyWithoutUsersInput
  id: StringFieldUpdateOperationsInput
  isAdmin: BoolFieldUpdateOperationsInput
  isVerified: BoolFieldUpdateOperationsInput
  paidBalance: FloatFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  passwordResetToken: StringFieldUpdateOperationsInput
  payouts: PayoutUpdateManyWithoutUserInput
  paypalEmail: NullableStringFieldUpdateOperationsInput
  products: ProductUpdateManyWithoutOwnerInput
  promoCodes: PromoCodeUpdateManyWithoutUserInput
  reports: ReportUpdateManyWithoutReporterInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  unpaidBalance: FloatFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  verifiedAt: NullableDateTimeFieldUpdateOperationsInput
  withdraws: WithdrawUpdateManyWithoutUserInput
}

input UserUpdateWithWhereUniqueWithoutFavoritesInput {
  data: UserUpdateWithoutFavoritesDataInput!
  where: UserWhereUniqueInput!
}

input UserUpsertWithoutCreatedTagsInput {
  create: UserCreateWithoutCreatedTagsInput!
  update: UserUpdateWithoutCreatedTagsDataInput!
}

input UserUpsertWithoutPayoutsInput {
  create: UserCreateWithoutPayoutsInput!
  update: UserUpdateWithoutPayoutsDataInput!
}

input UserUpsertWithoutProductsInput {
  create: UserCreateWithoutProductsInput!
  update: UserUpdateWithoutProductsDataInput!
}

input UserUpsertWithoutPromoCodesInput {
  create: UserCreateWithoutPromoCodesInput!
  update: UserUpdateWithoutPromoCodesDataInput!
}

input UserUpsertWithoutReportsInput {
  create: UserCreateWithoutReportsInput!
  update: UserUpdateWithoutReportsDataInput!
}

input UserUpsertWithoutReviewsInput {
  create: UserCreateWithoutReviewsInput!
  update: UserUpdateWithoutReviewsDataInput!
}

input UserUpsertWithoutTransactionsInput {
  create: UserCreateWithoutTransactionsInput!
  update: UserUpdateWithoutTransactionsDataInput!
}

input UserUpsertWithWhereUniqueWithoutFavoritesInput {
  create: UserCreateWithoutFavoritesInput!
  update: UserUpdateWithoutFavoritesDataInput!
  where: UserWhereUniqueInput!
}

input UserWhereInput {
  accountType: AccountType
  adTokens: FloatFilter
  AND: [UserWhereInput]
  avatarURL: StringNullableFilter
  createdAt: DateTimeFilter
  createdTags: TagListRelationFilter
  discordId: StringNullableFilter
  displayName: StringNullableFilter
  email: StringFilter
  emailOnSale: BoolFilter
  emailUpdates: BoolFilter
  emailVerified: BoolFilter
  emailVerifyToken: StringFilter
  favorites: ProductListRelationFilter
  id: StringFilter
  isAdmin: BoolFilter
  isVerified: BoolFilter
  NOT: [UserWhereInput]
  OR: [UserWhereInput]
  paidBalance: FloatFilter
  password: StringFilter
  passwordResetToken: StringFilter
  payouts: PayoutListRelationFilter
  paypalEmail: StringNullableFilter
  products: ProductListRelationFilter
  promoCodes: PromoCodeListRelationFilter
  reports: ReportListRelationFilter
  reviews: ReviewListRelationFilter
  transactions: TransactionListRelationFilter
  unpaidBalance: FloatFilter
  updatedAt: DateTimeFilter
  username: StringFilter
  verifiedAt: DateTimeNullableFilter
  withdraws: WithdrawListRelationFilter
}

input UserWhereUniqueInput {
  email: String
  emailVerifyToken: String
  id: String
  passwordResetToken: String
  username: String
}

type Withdraw {
  approved: Boolean!
  createdAt: DateTime!
  id: String!
}

input WithdrawCreateManyWithoutUserInput {
  connect: [WithdrawWhereUniqueInput]
  create: [WithdrawCreateWithoutUserInput]
}

input WithdrawCreateWithoutUserInput {
  approved: Boolean
  confirmToken: String
  createdAt: DateTime
  id: String
}

input WithdrawListRelationFilter {
  every: WithdrawWhereInput
  none: WithdrawWhereInput
  some: WithdrawWhereInput
}

input WithdrawScalarWhereInput {
  AND: [WithdrawScalarWhereInput]
  approved: BoolFilter
  confirmToken: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  NOT: [WithdrawScalarWhereInput]
  OR: [WithdrawScalarWhereInput]
  userId: StringFilter
}

input WithdrawUpdateManyDataInput {
  approved: BoolFieldUpdateOperationsInput
  confirmToken: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
}

input WithdrawUpdateManyWithoutUserInput {
  connect: [WithdrawWhereUniqueInput]
  create: [WithdrawCreateWithoutUserInput]
  delete: [WithdrawWhereUniqueInput]
  deleteMany: [WithdrawScalarWhereInput]
  disconnect: [WithdrawWhereUniqueInput]
  set: [WithdrawWhereUniqueInput]
  update: [WithdrawUpdateWithWhereUniqueWithoutUserInput]
  updateMany: [WithdrawUpdateManyWithWhereNestedInput]
  upsert: [WithdrawUpsertWithWhereUniqueWithoutUserInput]
}

input WithdrawUpdateManyWithWhereNestedInput {
  data: WithdrawUpdateManyDataInput!
  where: WithdrawScalarWhereInput!
}

input WithdrawUpdateWithoutUserDataInput {
  approved: BoolFieldUpdateOperationsInput
  confirmToken: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
}

input WithdrawUpdateWithWhereUniqueWithoutUserInput {
  data: WithdrawUpdateWithoutUserDataInput!
  where: WithdrawWhereUniqueInput!
}

input WithdrawUpsertWithWhereUniqueWithoutUserInput {
  create: WithdrawCreateWithoutUserInput!
  update: WithdrawUpdateWithoutUserDataInput!
  where: WithdrawWhereUniqueInput!
}

input WithdrawWhereInput {
  AND: [WithdrawWhereInput]
  approved: BoolFilter
  confirmToken: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  NOT: [WithdrawWhereInput]
  OR: [WithdrawWhereInput]
  user: UserWhereInput
  userId: StringFilter
}

input WithdrawWhereUniqueInput {
  id: String
}
